// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Null struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Null) Reset()         { *m = Null{} }
func (m *Null) String() string { return proto.CompactTextString(m) }
func (*Null) ProtoMessage()    {}
func (*Null) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{0}
}

func (m *Null) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Null.Unmarshal(m, b)
}
func (m *Null) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Null.Marshal(b, m, deterministic)
}
func (m *Null) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Null.Merge(m, src)
}
func (m *Null) XXX_Size() int {
	return xxx_messageInfo_Null.Size(m)
}
func (m *Null) XXX_DiscardUnknown() {
	xxx_messageInfo_Null.DiscardUnknown(m)
}

var xxx_messageInfo_Null proto.InternalMessageInfo

type Block struct {
	Blockchain   string `protobuf:"bytes,1,opt,name=blockchain,proto3" json:"blockchain,omitempty"`
	Hash         string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	PreviousHash string `protobuf:"bytes,3,opt,name=previous_hash,json=previousHash,proto3" json:"previous_hash,omitempty"`
	// with ms
	Timestamp            uint64               `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Height               uint64               `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	MerkleRoot           string               `protobuf:"bytes,6,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	MarkedTxCount        uint64               `protobuf:"varint,7,opt,name=marked_tx_count,json=markedTxCount,proto3" json:"marked_tx_count,omitempty"`
	MarkedTxs            []*MarkedTransaction `protobuf:"bytes,8,rep,name=marked_txs,json=markedTxs,proto3" json:"marked_txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{1}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetBlockchain() string {
	if m != nil {
		return m.Blockchain
	}
	return ""
}

func (m *Block) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Block) GetPreviousHash() string {
	if m != nil {
		return m.PreviousHash
	}
	return ""
}

func (m *Block) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Block) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Block) GetMerkleRoot() string {
	if m != nil {
		return m.MerkleRoot
	}
	return ""
}

func (m *Block) GetMarkedTxCount() uint64 {
	if m != nil {
		return m.MarkedTxCount
	}
	return 0
}

func (m *Block) GetMarkedTxs() []*MarkedTransaction {
	if m != nil {
		return m.MarkedTxs
	}
	return nil
}

type MarkedTransaction struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	AddrFrom             string   `protobuf:"bytes,5,opt,name=addr_from,json=addrFrom,proto3" json:"addr_from,omitempty"`
	AddrTo               string   `protobuf:"bytes,6,opt,name=addr_to,json=addrTo,proto3" json:"addr_to,omitempty"`
	BlockHeight          uint64   `protobuf:"varint,7,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Index                uint64   `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkedTransaction) Reset()         { *m = MarkedTransaction{} }
func (m *MarkedTransaction) String() string { return proto.CompactTextString(m) }
func (*MarkedTransaction) ProtoMessage()    {}
func (*MarkedTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{2}
}

func (m *MarkedTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkedTransaction.Unmarshal(m, b)
}
func (m *MarkedTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkedTransaction.Marshal(b, m, deterministic)
}
func (m *MarkedTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkedTransaction.Merge(m, src)
}
func (m *MarkedTransaction) XXX_Size() int {
	return xxx_messageInfo_MarkedTransaction.Size(m)
}
func (m *MarkedTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkedTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_MarkedTransaction proto.InternalMessageInfo

func (m *MarkedTransaction) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *MarkedTransaction) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *MarkedTransaction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MarkedTransaction) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *MarkedTransaction) GetAddrFrom() string {
	if m != nil {
		return m.AddrFrom
	}
	return ""
}

func (m *MarkedTransaction) GetAddrTo() string {
	if m != nil {
		return m.AddrTo
	}
	return ""
}

func (m *MarkedTransaction) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *MarkedTransaction) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type BlockchainHeaders struct {
	Btc                  []*BlockchainHeader `protobuf:"bytes,1,rep,name=btc,proto3" json:"btc,omitempty"`
	Eth                  []*BlockchainHeader `protobuf:"bytes,2,rep,name=eth,proto3" json:"eth,omitempty"`
	Lsk                  []*BlockchainHeader `protobuf:"bytes,3,rep,name=lsk,proto3" json:"lsk,omitempty"`
	Neo                  []*BlockchainHeader `protobuf:"bytes,4,rep,name=neo,proto3" json:"neo,omitempty"`
	Wav                  []*BlockchainHeader `protobuf:"bytes,5,rep,name=wav,proto3" json:"wav,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BlockchainHeaders) Reset()         { *m = BlockchainHeaders{} }
func (m *BlockchainHeaders) String() string { return proto.CompactTextString(m) }
func (*BlockchainHeaders) ProtoMessage()    {}
func (*BlockchainHeaders) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{3}
}

func (m *BlockchainHeaders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockchainHeaders.Unmarshal(m, b)
}
func (m *BlockchainHeaders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockchainHeaders.Marshal(b, m, deterministic)
}
func (m *BlockchainHeaders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockchainHeaders.Merge(m, src)
}
func (m *BlockchainHeaders) XXX_Size() int {
	return xxx_messageInfo_BlockchainHeaders.Size(m)
}
func (m *BlockchainHeaders) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockchainHeaders.DiscardUnknown(m)
}

var xxx_messageInfo_BlockchainHeaders proto.InternalMessageInfo

func (m *BlockchainHeaders) GetBtc() []*BlockchainHeader {
	if m != nil {
		return m.Btc
	}
	return nil
}

func (m *BlockchainHeaders) GetEth() []*BlockchainHeader {
	if m != nil {
		return m.Eth
	}
	return nil
}

func (m *BlockchainHeaders) GetLsk() []*BlockchainHeader {
	if m != nil {
		return m.Lsk
	}
	return nil
}

func (m *BlockchainHeaders) GetNeo() []*BlockchainHeader {
	if m != nil {
		return m.Neo
	}
	return nil
}

func (m *BlockchainHeaders) GetWav() []*BlockchainHeader {
	if m != nil {
		return m.Wav
	}
	return nil
}

type BlockchainHeaderRefs struct {
	BtcRef               []string `protobuf:"bytes,1,rep,name=btc_ref,json=btcRef,proto3" json:"btc_ref,omitempty"`
	EthRef               []string `protobuf:"bytes,2,rep,name=eth_ref,json=ethRef,proto3" json:"eth_ref,omitempty"`
	LskRef               []string `protobuf:"bytes,3,rep,name=lsk_ref,json=lskRef,proto3" json:"lsk_ref,omitempty"`
	NeoRef               []string `protobuf:"bytes,4,rep,name=neo_ref,json=neoRef,proto3" json:"neo_ref,omitempty"`
	WavRef               []string `protobuf:"bytes,5,rep,name=wav_ref,json=wavRef,proto3" json:"wav_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockchainHeaderRefs) Reset()         { *m = BlockchainHeaderRefs{} }
func (m *BlockchainHeaderRefs) String() string { return proto.CompactTextString(m) }
func (*BlockchainHeaderRefs) ProtoMessage()    {}
func (*BlockchainHeaderRefs) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{4}
}

func (m *BlockchainHeaderRefs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockchainHeaderRefs.Unmarshal(m, b)
}
func (m *BlockchainHeaderRefs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockchainHeaderRefs.Marshal(b, m, deterministic)
}
func (m *BlockchainHeaderRefs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockchainHeaderRefs.Merge(m, src)
}
func (m *BlockchainHeaderRefs) XXX_Size() int {
	return xxx_messageInfo_BlockchainHeaderRefs.Size(m)
}
func (m *BlockchainHeaderRefs) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockchainHeaderRefs.DiscardUnknown(m)
}

var xxx_messageInfo_BlockchainHeaderRefs proto.InternalMessageInfo

func (m *BlockchainHeaderRefs) GetBtcRef() []string {
	if m != nil {
		return m.BtcRef
	}
	return nil
}

func (m *BlockchainHeaderRefs) GetEthRef() []string {
	if m != nil {
		return m.EthRef
	}
	return nil
}

func (m *BlockchainHeaderRefs) GetLskRef() []string {
	if m != nil {
		return m.LskRef
	}
	return nil
}

func (m *BlockchainHeaderRefs) GetNeoRef() []string {
	if m != nil {
		return m.NeoRef
	}
	return nil
}

func (m *BlockchainHeaderRefs) GetWavRef() []string {
	if m != nil {
		return m.WavRef
	}
	return nil
}

type BcBlock struct {
	Hash                       string             `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	PreviousHash               string             `protobuf:"bytes,2,opt,name=previous_hash,json=previousHash,proto3" json:"previous_hash,omitempty"`
	Version                    uint64             `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	SchemaVersion              uint64             `protobuf:"varint,4,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	Height                     uint64             `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Miner                      string             `protobuf:"bytes,6,opt,name=miner,proto3" json:"miner,omitempty"`
	Difficulty                 string             `protobuf:"bytes,7,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Timestamp                  uint64             `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MerkleRoot                 string             `protobuf:"bytes,9,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	ChainRoot                  string             `protobuf:"bytes,10,opt,name=chain_root,json=chainRoot,proto3" json:"chain_root,omitempty"`
	Distance                   string             `protobuf:"bytes,11,opt,name=distance,proto3" json:"distance,omitempty"`
	TotalDistance              string             `protobuf:"bytes,12,opt,name=total_distance,json=totalDistance,proto3" json:"total_distance,omitempty"`
	Nonce                      string             `protobuf:"bytes,13,opt,name=nonce,proto3" json:"nonce,omitempty"`
	NrgGrant                   uint64             `protobuf:"varint,14,opt,name=nrg_grant,json=nrgGrant,proto3" json:"nrg_grant,omitempty"`
	Twn                        uint64             `protobuf:"varint,15,opt,name=twn,proto3" json:"twn,omitempty"`
	Tws                        []string           `protobuf:"bytes,16,rep,name=tws,proto3" json:"tws,omitempty"`
	EmblemWeight               uint64             `protobuf:"varint,17,opt,name=emblem_weight,json=emblemWeight,proto3" json:"emblem_weight,omitempty"`
	EmblemChainFingerprintRoot string             `protobuf:"bytes,18,opt,name=emblem_chain_fingerprint_root,json=emblemChainFingerprintRoot,proto3" json:"emblem_chain_fingerprint_root,omitempty"`
	EmblemChainAddress         string             `protobuf:"bytes,19,opt,name=emblem_chain_address,json=emblemChainAddress,proto3" json:"emblem_chain_address,omitempty"`
	TxCount                    uint64             `protobuf:"varint,20,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	Txs                        []*Transaction     `protobuf:"bytes,21,rep,name=txs,proto3" json:"txs,omitempty"`
	TxFeeBase                  uint64             `protobuf:"varint,22,opt,name=tx_fee_base,json=txFeeBase,proto3" json:"tx_fee_base,omitempty"`
	TxDistanceSumLimit         uint64             `protobuf:"varint,23,opt,name=tx_distance_sum_limit,json=txDistanceSumLimit,proto3" json:"tx_distance_sum_limit,omitempty"`
	BlockchainHeadersCount     uint64             `protobuf:"varint,24,opt,name=blockchain_headers_count,json=blockchainHeadersCount,proto3" json:"blockchain_headers_count,omitempty"`
	BlockchainHeaders          *BlockchainHeaders `protobuf:"bytes,25,opt,name=blockchain_headers,json=blockchainHeaders,proto3" json:"blockchain_headers,omitempty"`
	BlockchainFingerprintsRoot string             `protobuf:"bytes,26,opt,name=blockchain_fingerprints_root,json=blockchainFingerprintsRoot,proto3" json:"blockchain_fingerprints_root,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}           `json:"-"`
	XXX_unrecognized           []byte             `json:"-"`
	XXX_sizecache              int32              `json:"-"`
}

func (m *BcBlock) Reset()         { *m = BcBlock{} }
func (m *BcBlock) String() string { return proto.CompactTextString(m) }
func (*BcBlock) ProtoMessage()    {}
func (*BcBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{5}
}

func (m *BcBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BcBlock.Unmarshal(m, b)
}
func (m *BcBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BcBlock.Marshal(b, m, deterministic)
}
func (m *BcBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BcBlock.Merge(m, src)
}
func (m *BcBlock) XXX_Size() int {
	return xxx_messageInfo_BcBlock.Size(m)
}
func (m *BcBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_BcBlock.DiscardUnknown(m)
}

var xxx_messageInfo_BcBlock proto.InternalMessageInfo

func (m *BcBlock) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *BcBlock) GetPreviousHash() string {
	if m != nil {
		return m.PreviousHash
	}
	return ""
}

func (m *BcBlock) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BcBlock) GetSchemaVersion() uint64 {
	if m != nil {
		return m.SchemaVersion
	}
	return 0
}

func (m *BcBlock) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BcBlock) GetMiner() string {
	if m != nil {
		return m.Miner
	}
	return ""
}

func (m *BcBlock) GetDifficulty() string {
	if m != nil {
		return m.Difficulty
	}
	return ""
}

func (m *BcBlock) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BcBlock) GetMerkleRoot() string {
	if m != nil {
		return m.MerkleRoot
	}
	return ""
}

func (m *BcBlock) GetChainRoot() string {
	if m != nil {
		return m.ChainRoot
	}
	return ""
}

func (m *BcBlock) GetDistance() string {
	if m != nil {
		return m.Distance
	}
	return ""
}

func (m *BcBlock) GetTotalDistance() string {
	if m != nil {
		return m.TotalDistance
	}
	return ""
}

func (m *BcBlock) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *BcBlock) GetNrgGrant() uint64 {
	if m != nil {
		return m.NrgGrant
	}
	return 0
}

func (m *BcBlock) GetTwn() uint64 {
	if m != nil {
		return m.Twn
	}
	return 0
}

func (m *BcBlock) GetTws() []string {
	if m != nil {
		return m.Tws
	}
	return nil
}

func (m *BcBlock) GetEmblemWeight() uint64 {
	if m != nil {
		return m.EmblemWeight
	}
	return 0
}

func (m *BcBlock) GetEmblemChainFingerprintRoot() string {
	if m != nil {
		return m.EmblemChainFingerprintRoot
	}
	return ""
}

func (m *BcBlock) GetEmblemChainAddress() string {
	if m != nil {
		return m.EmblemChainAddress
	}
	return ""
}

func (m *BcBlock) GetTxCount() uint64 {
	if m != nil {
		return m.TxCount
	}
	return 0
}

func (m *BcBlock) GetTxs() []*Transaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (m *BcBlock) GetTxFeeBase() uint64 {
	if m != nil {
		return m.TxFeeBase
	}
	return 0
}

func (m *BcBlock) GetTxDistanceSumLimit() uint64 {
	if m != nil {
		return m.TxDistanceSumLimit
	}
	return 0
}

func (m *BcBlock) GetBlockchainHeadersCount() uint64 {
	if m != nil {
		return m.BlockchainHeadersCount
	}
	return 0
}

func (m *BcBlock) GetBlockchainHeaders() *BlockchainHeaders {
	if m != nil {
		return m.BlockchainHeaders
	}
	return nil
}

func (m *BcBlock) GetBlockchainFingerprintsRoot() string {
	if m != nil {
		return m.BlockchainFingerprintsRoot
	}
	return ""
}

type BcBlockRef struct {
	Hash                       string                `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	PreviousHash               string                `protobuf:"bytes,2,opt,name=previous_hash,json=previousHash,proto3" json:"previous_hash,omitempty"`
	Version                    uint64                `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	SchemaVersion              uint64                `protobuf:"varint,4,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	Height                     uint64                `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Miner                      string                `protobuf:"bytes,6,opt,name=miner,proto3" json:"miner,omitempty"`
	Difficulty                 string                `protobuf:"bytes,7,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Timestamp                  uint64                `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MerkleRoot                 string                `protobuf:"bytes,9,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	ChainRoot                  string                `protobuf:"bytes,10,opt,name=chain_root,json=chainRoot,proto3" json:"chain_root,omitempty"`
	Distance                   string                `protobuf:"bytes,11,opt,name=distance,proto3" json:"distance,omitempty"`
	TotalDistance              string                `protobuf:"bytes,12,opt,name=total_distance,json=totalDistance,proto3" json:"total_distance,omitempty"`
	Nonce                      string                `protobuf:"bytes,13,opt,name=nonce,proto3" json:"nonce,omitempty"`
	NrgGrant                   uint64                `protobuf:"varint,14,opt,name=nrg_grant,json=nrgGrant,proto3" json:"nrg_grant,omitempty"`
	Twn                        uint64                `protobuf:"varint,15,opt,name=twn,proto3" json:"twn,omitempty"`
	Tws                        []string              `protobuf:"bytes,16,rep,name=tws,proto3" json:"tws,omitempty"`
	EmblemWeight               uint64                `protobuf:"varint,17,opt,name=emblem_weight,json=emblemWeight,proto3" json:"emblem_weight,omitempty"`
	EmblemChainFingerprintRoot string                `protobuf:"bytes,18,opt,name=emblem_chain_fingerprint_root,json=emblemChainFingerprintRoot,proto3" json:"emblem_chain_fingerprint_root,omitempty"`
	EmblemChainAddress         string                `protobuf:"bytes,19,opt,name=emblem_chain_address,json=emblemChainAddress,proto3" json:"emblem_chain_address,omitempty"`
	TxCount                    uint64                `protobuf:"varint,20,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	Txs                        []*Transaction        `protobuf:"bytes,21,rep,name=txs,proto3" json:"txs,omitempty"`
	TxFeeBase                  uint64                `protobuf:"varint,22,opt,name=tx_fee_base,json=txFeeBase,proto3" json:"tx_fee_base,omitempty"`
	TxDistanceSumLimit         uint64                `protobuf:"varint,23,opt,name=tx_distance_sum_limit,json=txDistanceSumLimit,proto3" json:"tx_distance_sum_limit,omitempty"`
	BlockchainHeadersCount     uint64                `protobuf:"varint,24,opt,name=blockchain_headers_count,json=blockchainHeadersCount,proto3" json:"blockchain_headers_count,omitempty"`
	BlockchainHeaderRefs       *BlockchainHeaderRefs `protobuf:"bytes,25,opt,name=blockchain_header_refs,json=blockchainHeaderRefs,proto3" json:"blockchain_header_refs,omitempty"`
	BlockchainFingerprintsRoot string                `protobuf:"bytes,26,opt,name=blockchain_fingerprints_root,json=blockchainFingerprintsRoot,proto3" json:"blockchain_fingerprints_root,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}              `json:"-"`
	XXX_unrecognized           []byte                `json:"-"`
	XXX_sizecache              int32                 `json:"-"`
}

func (m *BcBlockRef) Reset()         { *m = BcBlockRef{} }
func (m *BcBlockRef) String() string { return proto.CompactTextString(m) }
func (*BcBlockRef) ProtoMessage()    {}
func (*BcBlockRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{6}
}

func (m *BcBlockRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BcBlockRef.Unmarshal(m, b)
}
func (m *BcBlockRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BcBlockRef.Marshal(b, m, deterministic)
}
func (m *BcBlockRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BcBlockRef.Merge(m, src)
}
func (m *BcBlockRef) XXX_Size() int {
	return xxx_messageInfo_BcBlockRef.Size(m)
}
func (m *BcBlockRef) XXX_DiscardUnknown() {
	xxx_messageInfo_BcBlockRef.DiscardUnknown(m)
}

var xxx_messageInfo_BcBlockRef proto.InternalMessageInfo

func (m *BcBlockRef) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *BcBlockRef) GetPreviousHash() string {
	if m != nil {
		return m.PreviousHash
	}
	return ""
}

func (m *BcBlockRef) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BcBlockRef) GetSchemaVersion() uint64 {
	if m != nil {
		return m.SchemaVersion
	}
	return 0
}

func (m *BcBlockRef) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BcBlockRef) GetMiner() string {
	if m != nil {
		return m.Miner
	}
	return ""
}

func (m *BcBlockRef) GetDifficulty() string {
	if m != nil {
		return m.Difficulty
	}
	return ""
}

func (m *BcBlockRef) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BcBlockRef) GetMerkleRoot() string {
	if m != nil {
		return m.MerkleRoot
	}
	return ""
}

func (m *BcBlockRef) GetChainRoot() string {
	if m != nil {
		return m.ChainRoot
	}
	return ""
}

func (m *BcBlockRef) GetDistance() string {
	if m != nil {
		return m.Distance
	}
	return ""
}

func (m *BcBlockRef) GetTotalDistance() string {
	if m != nil {
		return m.TotalDistance
	}
	return ""
}

func (m *BcBlockRef) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *BcBlockRef) GetNrgGrant() uint64 {
	if m != nil {
		return m.NrgGrant
	}
	return 0
}

func (m *BcBlockRef) GetTwn() uint64 {
	if m != nil {
		return m.Twn
	}
	return 0
}

func (m *BcBlockRef) GetTws() []string {
	if m != nil {
		return m.Tws
	}
	return nil
}

func (m *BcBlockRef) GetEmblemWeight() uint64 {
	if m != nil {
		return m.EmblemWeight
	}
	return 0
}

func (m *BcBlockRef) GetEmblemChainFingerprintRoot() string {
	if m != nil {
		return m.EmblemChainFingerprintRoot
	}
	return ""
}

func (m *BcBlockRef) GetEmblemChainAddress() string {
	if m != nil {
		return m.EmblemChainAddress
	}
	return ""
}

func (m *BcBlockRef) GetTxCount() uint64 {
	if m != nil {
		return m.TxCount
	}
	return 0
}

func (m *BcBlockRef) GetTxs() []*Transaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (m *BcBlockRef) GetTxFeeBase() uint64 {
	if m != nil {
		return m.TxFeeBase
	}
	return 0
}

func (m *BcBlockRef) GetTxDistanceSumLimit() uint64 {
	if m != nil {
		return m.TxDistanceSumLimit
	}
	return 0
}

func (m *BcBlockRef) GetBlockchainHeadersCount() uint64 {
	if m != nil {
		return m.BlockchainHeadersCount
	}
	return 0
}

func (m *BcBlockRef) GetBlockchainHeaderRefs() *BlockchainHeaderRefs {
	if m != nil {
		return m.BlockchainHeaderRefs
	}
	return nil
}

func (m *BcBlockRef) GetBlockchainFingerprintsRoot() string {
	if m != nil {
		return m.BlockchainFingerprintsRoot
	}
	return ""
}

type OutPoint struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Index                uint64   `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutPoint) Reset()         { *m = OutPoint{} }
func (m *OutPoint) String() string { return proto.CompactTextString(m) }
func (*OutPoint) ProtoMessage()    {}
func (*OutPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{7}
}

func (m *OutPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutPoint.Unmarshal(m, b)
}
func (m *OutPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutPoint.Marshal(b, m, deterministic)
}
func (m *OutPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutPoint.Merge(m, src)
}
func (m *OutPoint) XXX_Size() int {
	return xxx_messageInfo_OutPoint.Size(m)
}
func (m *OutPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_OutPoint.DiscardUnknown(m)
}

var xxx_messageInfo_OutPoint proto.InternalMessageInfo

func (m *OutPoint) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *OutPoint) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *OutPoint) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type WalletOutPoint struct {
	Outpoint             *OutPoint `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	CallbackScript       []byte    `protobuf:"bytes,2,opt,name=callback_script,json=callbackScript,proto3" json:"callback_script,omitempty"`
	OriginalScript       []byte    `protobuf:"bytes,3,opt,name=original_script,json=originalScript,proto3" json:"original_script,omitempty"`
	BlockHeight          uint64    `protobuf:"varint,4,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *WalletOutPoint) Reset()         { *m = WalletOutPoint{} }
func (m *WalletOutPoint) String() string { return proto.CompactTextString(m) }
func (*WalletOutPoint) ProtoMessage()    {}
func (*WalletOutPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{8}
}

func (m *WalletOutPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletOutPoint.Unmarshal(m, b)
}
func (m *WalletOutPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletOutPoint.Marshal(b, m, deterministic)
}
func (m *WalletOutPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletOutPoint.Merge(m, src)
}
func (m *WalletOutPoint) XXX_Size() int {
	return xxx_messageInfo_WalletOutPoint.Size(m)
}
func (m *WalletOutPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletOutPoint.DiscardUnknown(m)
}

var xxx_messageInfo_WalletOutPoint proto.InternalMessageInfo

func (m *WalletOutPoint) GetOutpoint() *OutPoint {
	if m != nil {
		return m.Outpoint
	}
	return nil
}

func (m *WalletOutPoint) GetCallbackScript() []byte {
	if m != nil {
		return m.CallbackScript
	}
	return nil
}

func (m *WalletOutPoint) GetOriginalScript() []byte {
	if m != nil {
		return m.OriginalScript
	}
	return nil
}

func (m *WalletOutPoint) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

type WalletData struct {
	BlockHeight                      uint64            `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	BlockHash                        string            `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	UnconfirmedSpendableOutpoints    []*WalletOutPoint `protobuf:"bytes,3,rep,name=unconfirmed_spendable_outpoints,json=unconfirmedSpendableOutpoints,proto3" json:"unconfirmed_spendable_outpoints,omitempty"`
	SpendableOutpoints               []*WalletOutPoint `protobuf:"bytes,4,rep,name=spendable_outpoints,json=spendableOutpoints,proto3" json:"spendable_outpoints,omitempty"`
	CollateralizedMakerOutpoints     []*WalletOutPoint `protobuf:"bytes,5,rep,name=collateralized_maker_outpoints,json=collateralizedMakerOutpoints,proto3" json:"collateralized_maker_outpoints,omitempty"`
	CollateralizedUnmatchedOutpoints []*WalletOutPoint `protobuf:"bytes,6,rep,name=collateralized_unmatched_outpoints,json=collateralizedUnmatchedOutpoints,proto3" json:"collateralized_unmatched_outpoints,omitempty"`
	CollateralizedMatchedOutpoints   []*WalletOutPoint `protobuf:"bytes,7,rep,name=collateralized_matched_outpoints,json=collateralizedMatchedOutpoints,proto3" json:"collateralized_matched_outpoints,omitempty"`
	CollateralizedSpendableOutpoints []*WalletOutPoint `protobuf:"bytes,8,rep,name=collateralized_spendable_outpoints,json=collateralizedSpendableOutpoints,proto3" json:"collateralized_spendable_outpoints,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}          `json:"-"`
	XXX_unrecognized                 []byte            `json:"-"`
	XXX_sizecache                    int32             `json:"-"`
}

func (m *WalletData) Reset()         { *m = WalletData{} }
func (m *WalletData) String() string { return proto.CompactTextString(m) }
func (*WalletData) ProtoMessage()    {}
func (*WalletData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{9}
}

func (m *WalletData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletData.Unmarshal(m, b)
}
func (m *WalletData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletData.Marshal(b, m, deterministic)
}
func (m *WalletData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletData.Merge(m, src)
}
func (m *WalletData) XXX_Size() int {
	return xxx_messageInfo_WalletData.Size(m)
}
func (m *WalletData) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletData.DiscardUnknown(m)
}

var xxx_messageInfo_WalletData proto.InternalMessageInfo

func (m *WalletData) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *WalletData) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *WalletData) GetUnconfirmedSpendableOutpoints() []*WalletOutPoint {
	if m != nil {
		return m.UnconfirmedSpendableOutpoints
	}
	return nil
}

func (m *WalletData) GetSpendableOutpoints() []*WalletOutPoint {
	if m != nil {
		return m.SpendableOutpoints
	}
	return nil
}

func (m *WalletData) GetCollateralizedMakerOutpoints() []*WalletOutPoint {
	if m != nil {
		return m.CollateralizedMakerOutpoints
	}
	return nil
}

func (m *WalletData) GetCollateralizedUnmatchedOutpoints() []*WalletOutPoint {
	if m != nil {
		return m.CollateralizedUnmatchedOutpoints
	}
	return nil
}

func (m *WalletData) GetCollateralizedMatchedOutpoints() []*WalletOutPoint {
	if m != nil {
		return m.CollateralizedMatchedOutpoints
	}
	return nil
}

func (m *WalletData) GetCollateralizedSpendableOutpoints() []*WalletOutPoint {
	if m != nil {
		return m.CollateralizedSpendableOutpoints
	}
	return nil
}

type Transaction struct {
	Version              uint64               `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Nonce                string               `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Hash                 string               `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Overline             string               `protobuf:"bytes,4,opt,name=overline,proto3" json:"overline,omitempty"`
	NinCount             uint64               `protobuf:"varint,5,opt,name=nin_count,json=ninCount,proto3" json:"nin_count,omitempty"`
	NoutCount            uint64               `protobuf:"varint,6,opt,name=nout_count,json=noutCount,proto3" json:"nout_count,omitempty"`
	Inputs               []*TransactionInput  `protobuf:"bytes,7,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs              []*TransactionOutput `protobuf:"bytes,8,rep,name=outputs,proto3" json:"outputs,omitempty"`
	LockTime             uint32               `protobuf:"varint,9,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{10}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Transaction) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *Transaction) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Transaction) GetOverline() string {
	if m != nil {
		return m.Overline
	}
	return ""
}

func (m *Transaction) GetNinCount() uint64 {
	if m != nil {
		return m.NinCount
	}
	return 0
}

func (m *Transaction) GetNoutCount() uint64 {
	if m != nil {
		return m.NoutCount
	}
	return 0
}

func (m *Transaction) GetInputs() []*TransactionInput {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Transaction) GetOutputs() []*TransactionOutput {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *Transaction) GetLockTime() uint32 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

type UnspentTransactions struct {
	Utxo                 []string `protobuf:"bytes,1,rep,name=utxo,proto3" json:"utxo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnspentTransactions) Reset()         { *m = UnspentTransactions{} }
func (m *UnspentTransactions) String() string { return proto.CompactTextString(m) }
func (*UnspentTransactions) ProtoMessage()    {}
func (*UnspentTransactions) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{11}
}

func (m *UnspentTransactions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnspentTransactions.Unmarshal(m, b)
}
func (m *UnspentTransactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnspentTransactions.Marshal(b, m, deterministic)
}
func (m *UnspentTransactions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnspentTransactions.Merge(m, src)
}
func (m *UnspentTransactions) XXX_Size() int {
	return xxx_messageInfo_UnspentTransactions.Size(m)
}
func (m *UnspentTransactions) XXX_DiscardUnknown() {
	xxx_messageInfo_UnspentTransactions.DiscardUnknown(m)
}

var xxx_messageInfo_UnspentTransactions proto.InternalMessageInfo

func (m *UnspentTransactions) GetUtxo() []string {
	if m != nil {
		return m.Utxo
	}
	return nil
}

type TransactionInput struct {
	OutPoint             *OutPoint `protobuf:"bytes,1,opt,name=out_point,json=outPoint,proto3" json:"out_point,omitempty"`
	ScriptLength         uint32    `protobuf:"varint,2,opt,name=script_length,json=scriptLength,proto3" json:"script_length,omitempty"`
	InputScript          []byte    `protobuf:"bytes,3,opt,name=input_script,json=inputScript,proto3" json:"input_script,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TransactionInput) Reset()         { *m = TransactionInput{} }
func (m *TransactionInput) String() string { return proto.CompactTextString(m) }
func (*TransactionInput) ProtoMessage()    {}
func (*TransactionInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{12}
}

func (m *TransactionInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionInput.Unmarshal(m, b)
}
func (m *TransactionInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionInput.Marshal(b, m, deterministic)
}
func (m *TransactionInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionInput.Merge(m, src)
}
func (m *TransactionInput) XXX_Size() int {
	return xxx_messageInfo_TransactionInput.Size(m)
}
func (m *TransactionInput) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionInput.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionInput proto.InternalMessageInfo

func (m *TransactionInput) GetOutPoint() *OutPoint {
	if m != nil {
		return m.OutPoint
	}
	return nil
}

func (m *TransactionInput) GetScriptLength() uint32 {
	if m != nil {
		return m.ScriptLength
	}
	return 0
}

func (m *TransactionInput) GetInputScript() []byte {
	if m != nil {
		return m.InputScript
	}
	return nil
}

type Utxo struct {
	Output               *TransactionOutput `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	TxHash               string             `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	TxIndex              uint64             `protobuf:"varint,3,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
	BlockHash            string             `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockHeight          uint64             `protobuf:"varint,5,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Coinbase             bool               `protobuf:"varint,6,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Utxo) Reset()         { *m = Utxo{} }
func (m *Utxo) String() string { return proto.CompactTextString(m) }
func (*Utxo) ProtoMessage()    {}
func (*Utxo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{13}
}

func (m *Utxo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Utxo.Unmarshal(m, b)
}
func (m *Utxo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Utxo.Marshal(b, m, deterministic)
}
func (m *Utxo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Utxo.Merge(m, src)
}
func (m *Utxo) XXX_Size() int {
	return xxx_messageInfo_Utxo.Size(m)
}
func (m *Utxo) XXX_DiscardUnknown() {
	xxx_messageInfo_Utxo.DiscardUnknown(m)
}

var xxx_messageInfo_Utxo proto.InternalMessageInfo

func (m *Utxo) GetOutput() *TransactionOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *Utxo) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *Utxo) GetTxIndex() uint64 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

func (m *Utxo) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *Utxo) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *Utxo) GetCoinbase() bool {
	if m != nil {
		return m.Coinbase
	}
	return false
}

type TransactionOutput struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Unit                 []byte   `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	ScriptLength         uint32   `protobuf:"varint,3,opt,name=script_length,json=scriptLength,proto3" json:"script_length,omitempty"`
	OutputScript         []byte   `protobuf:"bytes,4,opt,name=output_script,json=outputScript,proto3" json:"output_script,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionOutput) Reset()         { *m = TransactionOutput{} }
func (m *TransactionOutput) String() string { return proto.CompactTextString(m) }
func (*TransactionOutput) ProtoMessage()    {}
func (*TransactionOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{14}
}

func (m *TransactionOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionOutput.Unmarshal(m, b)
}
func (m *TransactionOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionOutput.Marshal(b, m, deterministic)
}
func (m *TransactionOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionOutput.Merge(m, src)
}
func (m *TransactionOutput) XXX_Size() int {
	return xxx_messageInfo_TransactionOutput.Size(m)
}
func (m *TransactionOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionOutput.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionOutput proto.InternalMessageInfo

func (m *TransactionOutput) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TransactionOutput) GetUnit() []byte {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *TransactionOutput) GetScriptLength() uint32 {
	if m != nil {
		return m.ScriptLength
	}
	return 0
}

func (m *TransactionOutput) GetOutputScript() []byte {
	if m != nil {
		return m.OutputScript
	}
	return nil
}

type BlockchainHeader struct {
	Blockchain                           string               `protobuf:"bytes,1,opt,name=blockchain,proto3" json:"blockchain,omitempty"`
	Hash                                 string               `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	PreviousHash                         string               `protobuf:"bytes,3,opt,name=previous_hash,json=previousHash,proto3" json:"previous_hash,omitempty"`
	Timestamp                            uint64               `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Height                               uint64               `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	MerkleRoot                           string               `protobuf:"bytes,6,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	BlockchainConfirmationsInParentCount uint64               `protobuf:"varint,7,opt,name=blockchain_confirmations_in_parent_count,json=blockchainConfirmationsInParentCount,proto3" json:"blockchain_confirmations_in_parent_count,omitempty"`
	MarkedTxs                            []*MarkedTransaction `protobuf:"bytes,8,rep,name=marked_txs,json=markedTxs,proto3" json:"marked_txs,omitempty"`
	MarkedTxCount                        uint64               `protobuf:"varint,9,opt,name=marked_tx_count,json=markedTxCount,proto3" json:"marked_tx_count,omitempty"`
	XXX_NoUnkeyedLiteral                 struct{}             `json:"-"`
	XXX_unrecognized                     []byte               `json:"-"`
	XXX_sizecache                        int32                `json:"-"`
}

func (m *BlockchainHeader) Reset()         { *m = BlockchainHeader{} }
func (m *BlockchainHeader) String() string { return proto.CompactTextString(m) }
func (*BlockchainHeader) ProtoMessage()    {}
func (*BlockchainHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{15}
}

func (m *BlockchainHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockchainHeader.Unmarshal(m, b)
}
func (m *BlockchainHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockchainHeader.Marshal(b, m, deterministic)
}
func (m *BlockchainHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockchainHeader.Merge(m, src)
}
func (m *BlockchainHeader) XXX_Size() int {
	return xxx_messageInfo_BlockchainHeader.Size(m)
}
func (m *BlockchainHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockchainHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BlockchainHeader proto.InternalMessageInfo

func (m *BlockchainHeader) GetBlockchain() string {
	if m != nil {
		return m.Blockchain
	}
	return ""
}

func (m *BlockchainHeader) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *BlockchainHeader) GetPreviousHash() string {
	if m != nil {
		return m.PreviousHash
	}
	return ""
}

func (m *BlockchainHeader) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockchainHeader) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockchainHeader) GetMerkleRoot() string {
	if m != nil {
		return m.MerkleRoot
	}
	return ""
}

func (m *BlockchainHeader) GetBlockchainConfirmationsInParentCount() uint64 {
	if m != nil {
		return m.BlockchainConfirmationsInParentCount
	}
	return 0
}

func (m *BlockchainHeader) GetMarkedTxs() []*MarkedTransaction {
	if m != nil {
		return m.MarkedTxs
	}
	return nil
}

func (m *BlockchainHeader) GetMarkedTxCount() uint64 {
	if m != nil {
		return m.MarkedTxCount
	}
	return 0
}

func init() {
	proto.RegisterType((*Null)(nil), "Null")
	proto.RegisterType((*Block)(nil), "Block")
	proto.RegisterType((*MarkedTransaction)(nil), "MarkedTransaction")
	proto.RegisterType((*BlockchainHeaders)(nil), "BlockchainHeaders")
	proto.RegisterType((*BlockchainHeaderRefs)(nil), "BlockchainHeaderRefs")
	proto.RegisterType((*BcBlock)(nil), "BcBlock")
	proto.RegisterType((*BcBlockRef)(nil), "BcBlockRef")
	proto.RegisterType((*OutPoint)(nil), "OutPoint")
	proto.RegisterType((*WalletOutPoint)(nil), "WalletOutPoint")
	proto.RegisterType((*WalletData)(nil), "WalletData")
	proto.RegisterType((*Transaction)(nil), "Transaction")
	proto.RegisterType((*UnspentTransactions)(nil), "UnspentTransactions")
	proto.RegisterType((*TransactionInput)(nil), "TransactionInput")
	proto.RegisterType((*Utxo)(nil), "Utxo")
	proto.RegisterType((*TransactionOutput)(nil), "TransactionOutput")
	proto.RegisterType((*BlockchainHeader)(nil), "BlockchainHeader")
}

func init() { proto.RegisterFile("core.proto", fileDescriptor_f7e43720d1edc0fe) }

var fileDescriptor_f7e43720d1edc0fe = []byte{
	// 1514 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0xcd, 0x92, 0xdb, 0x44,
	0x10, 0x2e, 0xf9, 0xdf, 0x6d, 0x7b, 0x7f, 0x26, 0xce, 0x46, 0x59, 0xb2, 0x9b, 0xc5, 0x4b, 0xc2,
	0x26, 0x15, 0xbc, 0x24, 0x5c, 0x38, 0x26, 0x9b, 0x54, 0x48, 0x20, 0x21, 0x29, 0x25, 0x9b, 0x14,
	0x54, 0x51, 0xaa, 0xb1, 0x3c, 0xb6, 0xa7, 0x2c, 0xcd, 0xb8, 0xa4, 0x91, 0xd7, 0x70, 0xe4, 0xc2,
	0x1d, 0x1e, 0x80, 0x17, 0xe0, 0xc0, 0x0b, 0x70, 0xe3, 0xc8, 0x89, 0x1b, 0x0f, 0xc2, 0x9d, 0x9a,
	0x1e, 0xc9, 0x96, 0x2d, 0x6f, 0x8a, 0x9f, 0x13, 0x55, 0x39, 0x59, 0xd3, 0xdf, 0xd7, 0xed, 0xe9,
	0x9e, 0xe9, 0x6f, 0x46, 0x02, 0xf0, 0x64, 0xc8, 0xba, 0x93, 0x50, 0x2a, 0xd9, 0xa9, 0x40, 0xe9,
	0xf3, 0xd8, 0xf7, 0x3b, 0xdf, 0x17, 0xa0, 0x7c, 0xe2, 0x4b, 0x6f, 0x4c, 0xf6, 0x01, 0x7a, 0xfa,
	0xc1, 0x1b, 0x51, 0x2e, 0x6c, 0xeb, 0xc0, 0x3a, 0xaa, 0x3b, 0x19, 0x0b, 0x21, 0x50, 0x1a, 0xd1,
	0x68, 0x64, 0x17, 0x10, 0xc1, 0x67, 0x72, 0x08, 0xad, 0x49, 0xc8, 0xa6, 0x5c, 0xc6, 0x91, 0x8b,
	0x60, 0x11, 0xc1, 0x66, 0x6a, 0x7c, 0xa4, 0x49, 0x57, 0xa0, 0xae, 0x78, 0xc0, 0x22, 0x45, 0x83,
	0x89, 0x5d, 0x3a, 0xb0, 0x8e, 0x4a, 0xce, 0xc2, 0x40, 0x76, 0xa0, 0x32, 0x62, 0x7c, 0x38, 0x52,
	0x76, 0x19, 0xa1, 0x64, 0x44, 0xae, 0x42, 0x23, 0x60, 0xe1, 0xd8, 0x67, 0x6e, 0x28, 0xa5, 0xb2,
	0x2b, 0x66, 0x3e, 0xc6, 0xe4, 0x48, 0xa9, 0xc8, 0x75, 0xd8, 0x0c, 0x68, 0x38, 0x66, 0x7d, 0x57,
	0xcd, 0x5c, 0x4f, 0xc6, 0x42, 0xd9, 0x55, 0x8c, 0xd0, 0x32, 0xe6, 0x97, 0xb3, 0xfb, 0xda, 0x48,
	0x6e, 0x03, 0xcc, 0x79, 0x91, 0x5d, 0x3b, 0x28, 0x1e, 0x35, 0xee, 0x90, 0xee, 0x53, 0xc3, 0x09,
	0xa9, 0x88, 0xa8, 0xa7, 0xb8, 0x14, 0x4e, 0x3d, 0x75, 0x8b, 0x3a, 0xbf, 0x5b, 0xb0, 0x9d, 0x23,
	0x90, 0x36, 0x94, 0xa7, 0xd4, 0x8f, 0x19, 0xd6, 0xa6, 0xe9, 0x98, 0xc1, 0xda, 0xb2, 0x6c, 0x40,
	0x81, 0xf7, 0x93, 0x5a, 0x14, 0x78, 0x5f, 0x7b, 0x2a, 0x39, 0x66, 0x02, 0xb3, 0xaf, 0x3b, 0x66,
	0x40, 0xde, 0x81, 0x3a, 0xed, 0xf7, 0x43, 0x77, 0x10, 0xca, 0x00, 0x93, 0xaf, 0x3b, 0x35, 0x6d,
	0x78, 0x18, 0xca, 0x80, 0x5c, 0x82, 0x2a, 0x82, 0x4a, 0x26, 0xa9, 0x57, 0xf4, 0xf0, 0xa5, 0x24,
	0xef, 0x42, 0x13, 0x17, 0xc5, 0x4d, 0xaa, 0x66, 0x72, 0x6e, 0xa0, 0xed, 0x91, 0x29, 0x5d, 0x1b,
	0xca, 0x5c, 0xf4, 0xd9, 0xcc, 0xae, 0x21, 0x66, 0x06, 0x9d, 0xdf, 0x2c, 0xd8, 0x3e, 0x99, 0x2f,
	0xe7, 0x23, 0x46, 0xfb, 0x2c, 0x8c, 0xc8, 0x21, 0x14, 0x7b, 0xca, 0xb3, 0x2d, 0x2c, 0xcb, 0x76,
	0x77, 0x95, 0xe0, 0x68, 0x54, 0x93, 0x98, 0xd2, 0x29, 0x9e, 0x47, 0x62, 0x4a, 0xef, 0x85, 0xa2,
	0x1f, 0x8d, 0xed, 0xe2, 0xb9, 0x24, 0x3f, 0x1a, 0x6b, 0x92, 0x60, 0xd2, 0x2e, 0x9d, 0x4b, 0x12,
	0x4c, 0x6a, 0xd2, 0x19, 0x9d, 0xda, 0xe5, 0x73, 0x49, 0x67, 0x74, 0xda, 0xf9, 0xc1, 0x82, 0x76,
	0x0e, 0x61, 0x83, 0x48, 0x57, 0xae, 0xa7, 0x3c, 0x37, 0x64, 0x03, 0xcc, 0xaa, 0xee, 0x54, 0x7a,
	0xca, 0x73, 0xd8, 0x40, 0x03, 0x4c, 0x8d, 0x10, 0x28, 0x18, 0x80, 0xa9, 0x51, 0x02, 0xf8, 0xd1,
	0x18, 0x81, 0xa2, 0x01, 0xfc, 0x68, 0x9c, 0x00, 0x82, 0x49, 0x04, 0x4a, 0x06, 0x10, 0x4c, 0x26,
	0xc0, 0x19, 0x9d, 0x22, 0x50, 0x36, 0xc0, 0x19, 0x9d, 0x3a, 0x6c, 0xd0, 0xf9, 0xb9, 0x0a, 0xd5,
	0x13, 0xcf, 0x34, 0x54, 0xba, 0x33, 0xac, 0x37, 0x35, 0x4c, 0x61, 0x4d, 0xc3, 0xd8, 0x50, 0x9d,
	0xb2, 0x30, 0xe2, 0x52, 0xe0, 0x1e, 0x2a, 0x39, 0xe9, 0x90, 0x5c, 0x83, 0x8d, 0xc8, 0x1b, 0xb1,
	0x80, 0xba, 0x29, 0xc1, 0xf4, 0x53, 0xcb, 0x58, 0x5f, 0x25, 0xb4, 0xf3, 0x7a, 0xaa, 0x0d, 0xe5,
	0x80, 0x0b, 0x16, 0x26, 0x5b, 0xca, 0x0c, 0x74, 0xe3, 0xf7, 0xf9, 0x60, 0xc0, 0xbd, 0xd8, 0x57,
	0x5f, 0xe3, 0x7e, 0xaa, 0x3b, 0x19, 0xcb, 0x72, 0xff, 0xd6, 0x56, 0xfb, 0x77, 0xa5, 0x4f, 0xeb,
	0xb9, 0x3e, 0xdd, 0x03, 0xc0, 0x25, 0x32, 0x38, 0x20, 0x5e, 0x47, 0x0b, 0xc2, 0xbb, 0x50, 0xeb,
	0xf3, 0x48, 0x51, 0xe1, 0x31, 0xbb, 0x61, 0x9a, 0x20, 0x1d, 0xeb, 0x74, 0x95, 0x54, 0xd4, 0x77,
	0xe7, 0x8c, 0x26, 0x32, 0x5a, 0x68, 0x7d, 0x90, 0xd2, 0xda, 0x50, 0x16, 0x52, 0xa3, 0x2d, 0x93,
	0x16, 0x0e, 0x74, 0x7b, 0x89, 0x70, 0xe8, 0x0e, 0x43, 0x2a, 0x94, 0xbd, 0x81, 0xd3, 0xae, 0x89,
	0x70, 0xf8, 0x89, 0x1e, 0x93, 0x2d, 0x28, 0xaa, 0x33, 0x61, 0x6f, 0xa2, 0x59, 0x3f, 0x1a, 0x4b,
	0x64, 0x6f, 0xe1, 0x72, 0xea, 0x47, 0xbd, 0x56, 0x2c, 0xe8, 0xf9, 0x2c, 0x70, 0xcf, 0x4c, 0x31,
	0xb7, 0x91, 0xdd, 0x34, 0xc6, 0xd7, 0xa6, 0xa4, 0xf7, 0x60, 0x2f, 0x21, 0x99, 0x24, 0x07, 0x5c,
	0x0c, 0x59, 0x38, 0x09, 0xb9, 0x50, 0x26, 0x61, 0x82, 0x73, 0xda, 0x35, 0xa4, 0xfb, 0x9a, 0xf3,
	0x70, 0x41, 0xc1, 0x0a, 0x7c, 0x08, 0xed, 0xa5, 0x10, 0xba, 0xd1, 0x59, 0x14, 0xd9, 0x17, 0xd0,
	0x93, 0x64, 0x3c, 0xef, 0x19, 0x84, 0x5c, 0x86, 0xda, 0x5c, 0xf3, 0xda, 0x66, 0x87, 0xa8, 0x44,
	0xed, 0xf6, 0xa1, 0xa8, 0x65, 0xee, 0x22, 0xf6, 0x4e, 0xb3, 0x9b, 0x15, 0x38, 0x0d, 0x90, 0x7d,
	0x68, 0xa8, 0x99, 0x3b, 0x60, 0xcc, 0xed, 0xd1, 0x88, 0xd9, 0x3b, 0xc9, 0x72, 0xce, 0x1e, 0x32,
	0x76, 0x42, 0x23, 0x46, 0x6e, 0xc3, 0x45, 0x35, 0x9b, 0xd7, 0xdb, 0x8d, 0xe2, 0xc0, 0xf5, 0x79,
	0xc0, 0x95, 0x7d, 0x09, 0x99, 0x44, 0xcd, 0xd2, 0xb2, 0xbf, 0x88, 0x83, 0x27, 0x1a, 0x21, 0x1f,
	0x83, 0xbd, 0x38, 0x26, 0xdc, 0x91, 0x11, 0x96, 0x64, 0x76, 0x36, 0x7a, 0xed, 0xf4, 0x56, 0x75,
	0xc7, 0x4c, 0xf6, 0x1e, 0x90, 0xbc, 0xa7, 0x7d, 0xf9, 0xc0, 0x42, 0x89, 0xce, 0x89, 0x95, 0xb3,
	0x9d, 0x8b, 0x43, 0xee, 0xc2, 0x95, 0x4c, 0x88, 0x4c, 0xf5, 0x23, 0x53, 0xfe, 0x5d, 0x53, 0xfe,
	0x05, 0x27, 0x53, 0xfd, 0x48, 0x97, 0xbf, 0xf3, 0x4b, 0x15, 0x20, 0x69, 0x59, 0xdd, 0xda, 0x6f,
	0xbb, 0xf6, 0x6d, 0xd7, 0xbe, 0xed, 0xda, 0x37, 0x75, 0xed, 0x67, 0xb0, 0x93, 0xf3, 0xd4, 0x47,
	0x61, 0xda, 0xb9, 0x17, 0xbb, 0xeb, 0xce, 0x65, 0xa7, 0xdd, 0x5b, 0x77, 0x5a, 0xff, 0xf7, 0xfe,
	0xfd, 0x14, 0x6a, 0xcf, 0x62, 0xf5, 0x5c, 0x72, 0xa1, 0xfe, 0xc1, 0x15, 0x6d, 0x7e, 0x47, 0x2a,
	0x66, 0xef, 0x48, 0x3f, 0x59, 0xb0, 0xf1, 0x9a, 0xfa, 0x3e, 0x53, 0xf3, 0x90, 0xd7, 0xa0, 0x26,
	0x63, 0x35, 0xd1, 0xcf, 0x18, 0xb5, 0x71, 0xa7, 0xde, 0x4d, 0x41, 0x67, 0x0e, 0x91, 0xf7, 0x61,
	0xd3, 0xa3, 0xbe, 0xdf, 0xa3, 0xde, 0xd8, 0x8d, 0xbc, 0x90, 0x4f, 0x14, 0xfe, 0x5d, 0xd3, 0xd9,
	0x48, 0xcd, 0x2f, 0xd0, 0xaa, 0x89, 0x32, 0xe4, 0x43, 0x2e, 0xa8, 0x9f, 0x12, 0x8b, 0x86, 0x98,
	0x9a, 0x13, 0xe2, 0xea, 0x45, 0xaf, 0x94, 0xbb, 0xe8, 0x75, 0xfe, 0x28, 0x01, 0x98, 0xe9, 0x3e,
	0xa0, 0x8a, 0xe6, 0x3c, 0xac, 0xfc, 0xd5, 0x70, 0x2f, 0xb9, 0xe4, 0x67, 0x65, 0xac, 0x6e, 0x08,
	0xba, 0x2a, 0xaf, 0xe1, 0x6a, 0x2c, 0x3c, 0x29, 0x06, 0x3c, 0x0c, 0x58, 0xdf, 0x8d, 0x26, 0x4c,
	0xf4, 0x69, 0xcf, 0x67, 0x6e, 0x9a, 0x67, 0x94, 0xdc, 0xef, 0x36, 0xbb, 0xcb, 0x65, 0x72, 0xf6,
	0x32, 0x7e, 0x2f, 0x52, 0xb7, 0x67, 0xa9, 0x17, 0xb9, 0x0b, 0x17, 0xd6, 0x05, 0x2b, 0xad, 0x0f,
	0x46, 0xa2, 0x7c, 0x84, 0x53, 0xd8, 0xf7, 0xa4, 0xef, 0x53, 0xc5, 0x42, 0xea, 0xf3, 0x6f, 0x58,
	0xdf, 0x0d, 0xe8, 0x98, 0x85, 0x99, 0x60, 0xe5, 0xf5, 0xc1, 0xae, 0x2c, 0xbb, 0x3d, 0xd5, 0x5e,
	0x8b, 0xb0, 0x5f, 0x41, 0x67, 0x25, 0x6c, 0x2c, 0x02, 0xaa, 0xbc, 0x11, 0xeb, 0x67, 0x42, 0x57,
	0xd6, 0x87, 0x3e, 0x58, 0x76, 0x3d, 0x4d, 0x3d, 0x17, 0xe1, 0xbf, 0x80, 0x83, 0xdc, 0xac, 0x57,
	0x83, 0x57, 0xd7, 0x07, 0xdf, 0x5f, 0x9d, 0xf7, 0x4a, 0xe8, 0xfc, 0xcc, 0xd7, 0x55, 0xb8, 0xf6,
	0xb7, 0x66, 0x9e, 0x5f, 0xb1, 0xce, 0x8f, 0x05, 0x68, 0x64, 0xdf, 0x7e, 0x32, 0xc7, 0x9b, 0xb5,
	0x7c, 0xbc, 0xcd, 0x85, 0xbc, 0x90, 0x15, 0xf2, 0xb4, 0xe9, 0x8a, 0x99, 0xa6, 0xdb, 0x85, 0x9a,
	0x9c, 0xb2, 0xd0, 0xe7, 0x82, 0x25, 0xaf, 0x42, 0xf3, 0x31, 0x0a, 0x3f, 0x17, 0x89, 0x00, 0x95,
	0x13, 0xe1, 0xe7, 0xc2, 0x48, 0xce, 0x1e, 0x80, 0x90, 0xb1, 0x4a, 0xd0, 0x8a, 0x91, 0x3f, 0x6d,
	0x31, 0xf0, 0x0d, 0xa8, 0x70, 0x31, 0x89, 0xe7, 0xb5, 0xdc, 0xce, 0x2a, 0xe8, 0x63, 0x8d, 0x38,
	0x09, 0x81, 0xdc, 0x82, 0xaa, 0x2e, 0x4e, 0xac, 0x16, 0xaf, 0x82, 0x19, 0xee, 0x33, 0x84, 0x9c,
	0x94, 0xa2, 0x27, 0x85, 0xdd, 0xa2, 0x0f, 0x4e, 0x3c, 0x24, 0x5b, 0x4e, 0x4d, 0x1b, 0x5e, 0xf2,
	0x80, 0x75, 0x6e, 0xc0, 0x85, 0x53, 0xa1, 0x6b, 0xae, 0x32, 0x11, 0x22, 0x9d, 0x78, 0xac, 0x66,
	0x32, 0x79, 0xf9, 0xc0, 0xe7, 0xce, 0xb7, 0x16, 0x6c, 0xad, 0x4e, 0x89, 0x5c, 0x87, 0xba, 0xce,
	0xe9, 0x0d, 0xd2, 0x62, 0x14, 0xe8, 0x10, 0x5a, 0x46, 0x28, 0x5c, 0x9f, 0x89, 0xa1, 0x32, 0x6d,
	0xdb, 0x72, 0x9a, 0xc6, 0xf8, 0x04, 0x6d, 0xba, 0xf7, 0x31, 0xc3, 0x65, 0x4d, 0x69, 0xa0, 0xcd,
	0x08, 0x4a, 0xe7, 0x57, 0x0b, 0x4a, 0xa7, 0x6a, 0x26, 0xc9, 0x4d, 0xa8, 0x98, 0x04, 0x93, 0x7f,
	0x5d, 0x57, 0x82, 0x84, 0xa1, 0xdf, 0x74, 0xd4, 0x2c, 0xab, 0x16, 0x15, 0x35, 0x43, 0xa9, 0x30,
	0xa7, 0x59, 0x56, 0x43, 0xab, 0x6a, 0xf6, 0x58, 0x0f, 0x57, 0x44, 0xa6, 0xb4, 0x2a, 0x32, 0xab,
	0x32, 0x55, 0xce, 0xcb, 0xd4, 0x2e, 0xd4, 0x3c, 0xc9, 0x05, 0x1e, 0x76, 0x7a, 0xb5, 0x6b, 0xce,
	0x7c, 0xdc, 0xf9, 0xce, 0x82, 0xed, 0xdc, 0x7c, 0xcf, 0x57, 0xfe, 0x58, 0xf0, 0x54, 0x8a, 0xf1,
	0x39, 0x5f, 0xce, 0xe2, 0x9a, 0x72, 0x1e, 0x42, 0xcb, 0x14, 0x20, 0xad, 0x67, 0x09, 0x23, 0x34,
	0x8d, 0x31, 0x29, 0xe8, 0x9f, 0x05, 0xd8, 0x5a, 0x3d, 0xea, 0xfe, 0x77, 0x9f, 0x51, 0x5e, 0xc1,
	0x51, 0xe6, 0x00, 0x4e, 0x34, 0x9c, 0xe2, 0x56, 0x76, 0xb9, 0x70, 0x27, 0x34, 0x64, 0x42, 0x2d,
	0x7d, 0x5f, 0x79, 0x6f, 0xc1, 0xbf, 0x9f, 0xa5, 0x3f, 0x16, 0xcf, 0x91, 0xfc, 0x6f, 0x3f, 0xbb,
	0xac, 0xfb, 0xa2, 0x53, 0x5f, 0xf3, 0x45, 0xe7, 0xe4, 0xd6, 0x97, 0x37, 0x87, 0x5c, 0x8d, 0xe2,
	0x5e, 0xd7, 0x93, 0xc1, 0x71, 0xaa, 0x20, 0x1f, 0x04, 0x5c, 0x70, 0x31, 0x3c, 0x1e, 0x4a, 0xe9,
	0x1f, 0x47, 0xa1, 0x77, 0x8c, 0x1f, 0xba, 0xa2, 0x5e, 0x05, 0x7f, 0x3f, 0xfa, 0x2b, 0x00, 0x00,
	0xff, 0xff, 0x5c, 0x92, 0xac, 0x2a, 0xfe, 0x12, 0x00, 0x00,
}
