// Code generated by protoc-gen-go. DO NOT EDIT.
// source: miner.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MinerResponseResult int32

const (
	MinerResponseResult_Canceled MinerResponseResult = 0
	MinerResponseResult_Ok       MinerResponseResult = 1
	MinerResponseResult_Error    MinerResponseResult = 2
)

var MinerResponseResult_name = map[int32]string{
	0: "Canceled",
	1: "Ok",
	2: "Error",
}

var MinerResponseResult_value = map[string]int32{
	"Canceled": 0,
	"Ok":       1,
	"Error":    2,
}

func (x MinerResponseResult) String() string {
	return proto.EnumName(MinerResponseResult_name, int32(x))
}

func (MinerResponseResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6e7fcaacee94c057, []int{0}
}

type BlockFingerprint struct {
	Blockchain           string   `protobuf:"bytes,1,opt,name=blockchain,proto3" json:"blockchain,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Timestamp            uint64   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsCurrent            bool     `protobuf:"varint,4,opt,name=is_current,json=isCurrent,proto3" json:"is_current,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockFingerprint) Reset()         { *m = BlockFingerprint{} }
func (m *BlockFingerprint) String() string { return proto.CompactTextString(m) }
func (*BlockFingerprint) ProtoMessage()    {}
func (*BlockFingerprint) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e7fcaacee94c057, []int{0}
}

func (m *BlockFingerprint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockFingerprint.Unmarshal(m, b)
}
func (m *BlockFingerprint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockFingerprint.Marshal(b, m, deterministic)
}
func (m *BlockFingerprint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockFingerprint.Merge(m, src)
}
func (m *BlockFingerprint) XXX_Size() int {
	return xxx_messageInfo_BlockFingerprint.Size(m)
}
func (m *BlockFingerprint) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockFingerprint.DiscardUnknown(m)
}

var xxx_messageInfo_BlockFingerprint proto.InternalMessageInfo

func (m *BlockFingerprint) GetBlockchain() string {
	if m != nil {
		return m.Blockchain
	}
	return ""
}

func (m *BlockFingerprint) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *BlockFingerprint) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockFingerprint) GetIsCurrent() bool {
	if m != nil {
		return m.IsCurrent
	}
	return false
}

// Miner block input
type MinerRequest struct {
	WorkId               string             `protobuf:"bytes,1,opt,name=work_id,json=workId,proto3" json:"work_id,omitempty"`
	CurrentTimestamp     uint64             `protobuf:"varint,2,opt,name=current_timestamp,json=currentTimestamp,proto3" json:"current_timestamp,omitempty"`
	Offset               int32              `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Work                 string             `protobuf:"bytes,4,opt,name=work,proto3" json:"work,omitempty"`
	MinerKey             string             `protobuf:"bytes,5,opt,name=miner_key,json=minerKey,proto3" json:"miner_key,omitempty"`
	MerkleRoot           string             `protobuf:"bytes,6,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	Difficulty           string             `protobuf:"bytes,7,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	LastPreviousBlock    *BcBlock           `protobuf:"bytes,8,opt,name=last_previous_block,json=lastPreviousBlock,proto3" json:"last_previous_block,omitempty"`
	NewBlockHeaders      *BlockchainHeaders `protobuf:"bytes,9,opt,name=new_block_headers,json=newBlockHeaders,proto3" json:"new_block_headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MinerRequest) Reset()         { *m = MinerRequest{} }
func (m *MinerRequest) String() string { return proto.CompactTextString(m) }
func (*MinerRequest) ProtoMessage()    {}
func (*MinerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e7fcaacee94c057, []int{1}
}

func (m *MinerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinerRequest.Unmarshal(m, b)
}
func (m *MinerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinerRequest.Marshal(b, m, deterministic)
}
func (m *MinerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinerRequest.Merge(m, src)
}
func (m *MinerRequest) XXX_Size() int {
	return xxx_messageInfo_MinerRequest.Size(m)
}
func (m *MinerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MinerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MinerRequest proto.InternalMessageInfo

func (m *MinerRequest) GetWorkId() string {
	if m != nil {
		return m.WorkId
	}
	return ""
}

func (m *MinerRequest) GetCurrentTimestamp() uint64 {
	if m != nil {
		return m.CurrentTimestamp
	}
	return 0
}

func (m *MinerRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *MinerRequest) GetWork() string {
	if m != nil {
		return m.Work
	}
	return ""
}

func (m *MinerRequest) GetMinerKey() string {
	if m != nil {
		return m.MinerKey
	}
	return ""
}

func (m *MinerRequest) GetMerkleRoot() string {
	if m != nil {
		return m.MerkleRoot
	}
	return ""
}

func (m *MinerRequest) GetDifficulty() string {
	if m != nil {
		return m.Difficulty
	}
	return ""
}

func (m *MinerRequest) GetLastPreviousBlock() *BcBlock {
	if m != nil {
		return m.LastPreviousBlock
	}
	return nil
}

func (m *MinerRequest) GetNewBlockHeaders() *BlockchainHeaders {
	if m != nil {
		return m.NewBlockHeaders
	}
	return nil
}

// Miner block output
type MinerResponse struct {
	Result               MinerResponseResult `protobuf:"varint,1,opt,name=result,proto3,enum=MinerResponseResult" json:"result,omitempty"`
	Nonce                string              `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Difficulty           string              `protobuf:"bytes,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Distance             string              `protobuf:"bytes,4,opt,name=distance,proto3" json:"distance,omitempty"`
	Timestamp            uint64              `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Iterations           uint64              `protobuf:"varint,6,opt,name=iterations,proto3" json:"iterations,omitempty"`
	TimeDiff             uint64              `protobuf:"varint,7,opt,name=time_diff,json=timeDiff,proto3" json:"time_diff,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MinerResponse) Reset()         { *m = MinerResponse{} }
func (m *MinerResponse) String() string { return proto.CompactTextString(m) }
func (*MinerResponse) ProtoMessage()    {}
func (*MinerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e7fcaacee94c057, []int{2}
}

func (m *MinerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinerResponse.Unmarshal(m, b)
}
func (m *MinerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinerResponse.Marshal(b, m, deterministic)
}
func (m *MinerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinerResponse.Merge(m, src)
}
func (m *MinerResponse) XXX_Size() int {
	return xxx_messageInfo_MinerResponse.Size(m)
}
func (m *MinerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MinerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MinerResponse proto.InternalMessageInfo

func (m *MinerResponse) GetResult() MinerResponseResult {
	if m != nil {
		return m.Result
	}
	return MinerResponseResult_Canceled
}

func (m *MinerResponse) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *MinerResponse) GetDifficulty() string {
	if m != nil {
		return m.Difficulty
	}
	return ""
}

func (m *MinerResponse) GetDistance() string {
	if m != nil {
		return m.Distance
	}
	return ""
}

func (m *MinerResponse) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MinerResponse) GetIterations() uint64 {
	if m != nil {
		return m.Iterations
	}
	return 0
}

func (m *MinerResponse) GetTimeDiff() uint64 {
	if m != nil {
		return m.TimeDiff
	}
	return 0
}

func init() {
	proto.RegisterEnum("MinerResponseResult", MinerResponseResult_name, MinerResponseResult_value)
	proto.RegisterType((*BlockFingerprint)(nil), "BlockFingerprint")
	proto.RegisterType((*MinerRequest)(nil), "MinerRequest")
	proto.RegisterType((*MinerResponse)(nil), "MinerResponse")
}

func init() { proto.RegisterFile("miner.proto", fileDescriptor_6e7fcaacee94c057) }

var fileDescriptor_6e7fcaacee94c057 = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xad, 0x53, 0xdb, 0xb5, 0xa7, 0x7f, 0x7e, 0xe9, 0xb6, 0xfa, 0x61, 0x05, 0x28, 0x51, 0x2e,
	0x44, 0xa5, 0x38, 0x28, 0x48, 0x88, 0x13, 0x87, 0x14, 0x10, 0x08, 0x21, 0xd0, 0x8a, 0x13, 0x17,
	0xcb, 0xb1, 0xc7, 0xc9, 0x2a, 0xf6, 0x6e, 0xd8, 0x5d, 0x37, 0xca, 0x99, 0x2f, 0xc9, 0x67, 0xe0,
	0x53, 0xa0, 0x5d, 0x5b, 0xf9, 0x53, 0x38, 0x79, 0xe6, 0xbd, 0xd9, 0x7d, 0xb3, 0x6f, 0xc6, 0x70,
	0x5c, 0x31, 0x8e, 0x32, 0x5e, 0x4a, 0xa1, 0x45, 0x0f, 0x32, 0x21, 0xb1, 0x89, 0x07, 0x3f, 0x1d,
	0xe8, 0x4e, 0x4a, 0x91, 0x2d, 0xde, 0x33, 0x3e, 0x43, 0xb9, 0x94, 0x8c, 0x6b, 0x72, 0x05, 0x30,
	0x35, 0x58, 0x36, 0x4f, 0x19, 0x8f, 0x9c, 0xbe, 0x33, 0x0c, 0xe9, 0x0e, 0x42, 0x08, 0xb8, 0xf3,
	0x54, 0xcd, 0xa3, 0x8e, 0x65, 0x6c, 0x4c, 0x1e, 0x41, 0xa8, 0x59, 0x85, 0x4a, 0xa7, 0xd5, 0x32,
	0x3a, 0xec, 0x3b, 0x43, 0x97, 0x6e, 0x01, 0xf2, 0x18, 0x80, 0xa9, 0x24, 0xab, 0xa5, 0x44, 0xae,
	0x23, 0xb7, 0xef, 0x0c, 0x03, 0x1a, 0x32, 0x75, 0xdb, 0x00, 0x83, 0x5f, 0x1d, 0x38, 0xf9, 0x6c,
	0x3a, 0xa4, 0xf8, 0xa3, 0x46, 0xa5, 0xc9, 0x03, 0x38, 0x5a, 0x09, 0xb9, 0x48, 0x58, 0xde, 0xca,
	0xfb, 0x26, 0xfd, 0x98, 0x93, 0x67, 0x70, 0xde, 0xde, 0x92, 0x6c, 0xe5, 0x3a, 0x56, 0xae, 0xdb,
	0x12, 0xdf, 0x36, 0xaa, 0xff, 0x83, 0x2f, 0x8a, 0x42, 0xa1, 0xb6, 0x0d, 0x79, 0xb4, 0xcd, 0x4c,
	0xff, 0xe6, 0x3a, 0xdb, 0x47, 0x48, 0x6d, 0x4c, 0x1e, 0x42, 0x68, 0x3d, 0x4a, 0x16, 0xb8, 0x8e,
	0x3c, 0x4b, 0x04, 0x16, 0xf8, 0x84, 0x6b, 0xf2, 0x04, 0x8e, 0x2b, 0x94, 0x8b, 0x12, 0x13, 0x29,
	0x84, 0x8e, 0xfc, 0xc6, 0x91, 0x06, 0xa2, 0x42, 0x58, 0xc7, 0x72, 0x56, 0x14, 0x2c, 0xab, 0x4b,
	0xbd, 0x8e, 0x8e, 0x1a, 0x7e, 0x8b, 0x90, 0xd7, 0x70, 0x51, 0xa6, 0x4a, 0x27, 0x4b, 0x89, 0x77,
	0x4c, 0xd4, 0x2a, 0xb1, 0x6e, 0x46, 0x41, 0xdf, 0x19, 0x1e, 0x8f, 0x83, 0x78, 0x92, 0xd9, 0x19,
	0xd0, 0x73, 0x53, 0xf4, 0xb5, 0xad, 0xb1, 0x10, 0x79, 0x03, 0xe7, 0x1c, 0x57, 0x4d, 0x7d, 0x32,
	0xc7, 0x34, 0x47, 0xa9, 0xa2, 0xd0, 0x9e, 0x23, 0xf1, 0x64, 0x33, 0x93, 0x0f, 0x0d, 0x43, 0xff,
	0xe3, 0xb8, 0xb2, 0x68, 0x0b, 0x0c, 0x7e, 0x3b, 0x70, 0xda, 0x5a, 0xab, 0x96, 0x82, 0x2b, 0x24,
	0x37, 0xe0, 0x4b, 0x54, 0x75, 0xa9, 0xad, 0xb5, 0x67, 0xe3, 0xcb, 0x78, 0x8f, 0xa7, 0x96, 0xa3,
	0x6d, 0x0d, 0xb9, 0x04, 0x8f, 0x0b, 0x9e, 0x61, 0x3b, 0xec, 0x26, 0xb9, 0xf7, 0xde, 0xc3, 0xbf,
	0xde, 0xdb, 0x83, 0x20, 0x67, 0x4a, 0xa7, 0xe6, 0x60, 0xe3, 0xf2, 0x26, 0xdf, 0xdf, 0x14, 0xef,
	0xfe, 0xa6, 0x5c, 0x01, 0x30, 0x8d, 0x32, 0xd5, 0x4c, 0x70, 0x65, 0x9d, 0x76, 0xe9, 0x0e, 0x62,
	0xe6, 0x64, 0x8a, 0x13, 0x23, 0x66, 0x8d, 0x76, 0x69, 0x60, 0x80, 0xb7, 0xac, 0x28, 0xae, 0x5f,
	0xc1, 0xc5, 0x3f, 0xde, 0x42, 0x4e, 0x20, 0xb8, 0x35, 0xd2, 0x25, 0xe6, 0xdd, 0x03, 0xe2, 0x43,
	0xe7, 0xcb, 0xa2, 0xeb, 0x90, 0x10, 0xbc, 0x77, 0x52, 0x0a, 0xd9, 0xed, 0x8c, 0x5f, 0x80, 0x67,
	0xcf, 0x91, 0xa7, 0xe0, 0x9a, 0x80, 0x9c, 0xc6, 0xbb, 0xeb, 0xd8, 0x3b, 0xdb, 0xb7, 0x68, 0x70,
	0x30, 0xb9, 0xf9, 0x7e, 0x3d, 0x63, 0x7a, 0x5e, 0x4f, 0xe3, 0x4c, 0x54, 0x23, 0x71, 0x87, 0xb2,
	0x64, 0x1c, 0x9f, 0x57, 0x8c, 0x33, 0x3e, 0x1b, 0xcd, 0x84, 0x28, 0x47, 0x4a, 0x66, 0x23, 0xfb,
	0x93, 0xa9, 0xa9, 0x6f, 0xbf, 0x2f, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x6e, 0x0c, 0x39,
	0x87, 0x03, 0x00, 0x00,
}
