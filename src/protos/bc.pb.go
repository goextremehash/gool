// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: bc.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RpcTransactionResponseStatus int32

const (
	RpcTransactionResponseStatus_Success RpcTransactionResponseStatus = 0
	RpcTransactionResponseStatus_Failure RpcTransactionResponseStatus = 1
)

// Enum value maps for RpcTransactionResponseStatus.
var (
	RpcTransactionResponseStatus_name = map[int32]string{
		0: "Success",
		1: "Failure",
	}
	RpcTransactionResponseStatus_value = map[string]int32{
		"Success": 0,
		"Failure": 1,
	}
)

func (x RpcTransactionResponseStatus) Enum() *RpcTransactionResponseStatus {
	p := new(RpcTransactionResponseStatus)
	*p = x
	return p
}

func (x RpcTransactionResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcTransactionResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bc_proto_enumTypes[0].Descriptor()
}

func (RpcTransactionResponseStatus) Type() protoreflect.EnumType {
	return &file_bc_proto_enumTypes[0]
}

func (x RpcTransactionResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcTransactionResponseStatus.Descriptor instead.
func (RpcTransactionResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{0}
}

type HelpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpText string `protobuf:"bytes,1,opt,name=help_text,json=helpText,proto3" json:"help_text,omitempty"`
}

func (x *HelpResponse) Reset() {
	*x = HelpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpResponse) ProtoMessage() {}

func (x *HelpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpResponse.ProtoReflect.Descriptor instead.
func (*HelpResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{0}
}

func (x *HelpResponse) GetHelpText() string {
	if x != nil {
		return x.HelpText
	}
	return ""
}

type StatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calls                int64  `protobuf:"varint,1,opt,name=calls,proto3" json:"calls,omitempty"`
	LatestGpuMinerUpdate uint64 `protobuf:"varint,2,opt,name=latest_gpu_miner_update,json=latestGpuMinerUpdate,proto3" json:"latest_gpu_miner_update,omitempty"`
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{1}
}

func (x *StatsResponse) GetCalls() int64 {
	if x != nil {
		return x.Calls
	}
	return 0
}

func (x *StatsResponse) GetLatestGpuMinerUpdate() uint64 {
	if x != nil {
		return x.LatestGpuMinerUpdate
	}
	return 0
}

type RpcTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddr      string `protobuf:"bytes,1,opt,name=from_addr,json=fromAddr,proto3" json:"from_addr,omitempty"`
	ToAddr        string `protobuf:"bytes,2,opt,name=to_addr,json=toAddr,proto3" json:"to_addr,omitempty"`
	Amount        string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TxFee         string `protobuf:"bytes,4,opt,name=tx_fee,json=txFee,proto3" json:"tx_fee,omitempty"`
	PrivateKeyHex string `protobuf:"bytes,5,opt,name=private_key_hex,json=privateKeyHex,proto3" json:"private_key_hex,omitempty"`
}

func (x *RpcTransaction) Reset() {
	*x = RpcTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTransaction) ProtoMessage() {}

func (x *RpcTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTransaction.ProtoReflect.Descriptor instead.
func (*RpcTransaction) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{2}
}

func (x *RpcTransaction) GetFromAddr() string {
	if x != nil {
		return x.FromAddr
	}
	return ""
}

func (x *RpcTransaction) GetToAddr() string {
	if x != nil {
		return x.ToAddr
	}
	return ""
}

func (x *RpcTransaction) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *RpcTransaction) GetTxFee() string {
	if x != nil {
		return x.TxFee
	}
	return ""
}

func (x *RpcTransaction) GetPrivateKeyHex() string {
	if x != nil {
		return x.PrivateKeyHex
	}
	return ""
}

type RpcFeedTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerAddr     string `protobuf:"bytes,1,opt,name=owner_addr,json=ownerAddr,proto3" json:"owner_addr,omitempty"`
	FeedAddr      string `protobuf:"bytes,2,opt,name=feed_addr,json=feedAddr,proto3" json:"feed_addr,omitempty"`
	Amount        string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TxFee         string `protobuf:"bytes,4,opt,name=tx_fee,json=txFee,proto3" json:"tx_fee,omitempty"`
	PrivateKeyHex string `protobuf:"bytes,5,opt,name=private_key_hex,json=privateKeyHex,proto3" json:"private_key_hex,omitempty"`
}

func (x *RpcFeedTransaction) Reset() {
	*x = RpcFeedTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcFeedTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFeedTransaction) ProtoMessage() {}

func (x *RpcFeedTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFeedTransaction.ProtoReflect.Descriptor instead.
func (*RpcFeedTransaction) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{3}
}

func (x *RpcFeedTransaction) GetOwnerAddr() string {
	if x != nil {
		return x.OwnerAddr
	}
	return ""
}

func (x *RpcFeedTransaction) GetFeedAddr() string {
	if x != nil {
		return x.FeedAddr
	}
	return ""
}

func (x *RpcFeedTransaction) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *RpcFeedTransaction) GetTxFee() string {
	if x != nil {
		return x.TxFee
	}
	return ""
}

func (x *RpcFeedTransaction) GetPrivateKeyHex() string {
	if x != nil {
		return x.PrivateKeyHex
	}
	return ""
}

type RpcTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status RpcTransactionResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=RpcTransactionResponseStatus" json:"status,omitempty"`
	TxHash string                       `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Error  string                       `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RpcTransactionResponse) Reset() {
	*x = RpcTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTransactionResponse) ProtoMessage() {}

func (x *RpcTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTransactionResponse.ProtoReflect.Descriptor instead.
func (*RpcTransactionResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{4}
}

func (x *RpcTransactionResponse) GetStatus() RpcTransactionResponseStatus {
	if x != nil {
		return x.Status
	}
	return RpcTransactionResponseStatus_Success
}

func (x *RpcTransactionResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *RpcTransactionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From          string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount        string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TxHash        string `protobuf:"bytes,4,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	TxOutputIndex uint32 `protobuf:"varint,5,opt,name=tx_output_index,json=txOutputIndex,proto3" json:"tx_output_index,omitempty"`
	Timestamp     uint64 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Height        uint64 `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{5}
}

func (x *Transfer) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Transfer) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transfer) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Transfer) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *Transfer) GetTxOutputIndex() uint32 {
	if x != nil {
		return x.TxOutputIndex
	}
	return 0
}

func (x *Transfer) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transfer) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type TransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Max     uint32 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	From    string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *TransferRequest) Reset() {
	*x = TransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRequest) ProtoMessage() {}

func (x *TransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRequest.ProtoReflect.Descriptor instead.
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{6}
}

func (x *TransferRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TransferRequest) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *TransferRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

type GetHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Max  uint64 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *GetHistoryRequest) Reset() {
	*x = GetHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRequest) ProtoMessage() {}

func (x *GetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{7}
}

func (x *GetHistoryRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetHistoryRequest) GetMax() uint64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type TransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transfers []*Transfer `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
	From      string      `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To        string      `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *TransferResponse) Reset() {
	*x = TransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResponse) ProtoMessage() {}

func (x *TransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResponse.ProtoReflect.Descriptor instead.
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{8}
}

func (x *TransferResponse) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

func (x *TransferResponse) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransferResponse) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type GetUtxoLengthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptType string `protobuf:"bytes,1,opt,name=script_type,json=scriptType,proto3" json:"script_type,omitempty"`
	Address    string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetUtxoLengthRequest) Reset() {
	*x = GetUtxoLengthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUtxoLengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUtxoLengthRequest) ProtoMessage() {}

func (x *GetUtxoLengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUtxoLengthRequest.ProtoReflect.Descriptor instead.
func (*GetUtxoLengthRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{9}
}

func (x *GetUtxoLengthRequest) GetScriptType() string {
	if x != nil {
		return x.ScriptType
	}
	return ""
}

func (x *GetUtxoLengthRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetUtxoLengthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32 `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *GetUtxoLengthResponse) Reset() {
	*x = GetUtxoLengthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUtxoLengthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUtxoLengthResponse) ProtoMessage() {}

func (x *GetUtxoLengthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUtxoLengthResponse.ProtoReflect.Descriptor instead.
func (*GetUtxoLengthResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{10}
}

func (x *GetUtxoLengthResponse) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type GetSpendableCollateralRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	From    uint32 `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	To      uint32 `protobuf:"varint,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GetSpendableCollateralRequest) Reset() {
	*x = GetSpendableCollateralRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpendableCollateralRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpendableCollateralRequest) ProtoMessage() {}

func (x *GetSpendableCollateralRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpendableCollateralRequest.ProtoReflect.Descriptor instead.
func (*GetSpendableCollateralRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{11}
}

func (x *GetSpendableCollateralRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetSpendableCollateralRequest) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *GetSpendableCollateralRequest) GetTo() uint32 {
	if x != nil {
		return x.To
	}
	return 0
}

type GetSpendableCollateralResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outpoints []*OutPoint `protobuf:"bytes,1,rep,name=outpoints,proto3" json:"outpoints,omitempty"`
}

func (x *GetSpendableCollateralResponse) Reset() {
	*x = GetSpendableCollateralResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpendableCollateralResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpendableCollateralResponse) ProtoMessage() {}

func (x *GetSpendableCollateralResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpendableCollateralResponse.ProtoReflect.Descriptor instead.
func (*GetSpendableCollateralResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{12}
}

func (x *GetSpendableCollateralResponse) GetOutpoints() []*OutPoint {
	if x != nil {
		return x.Outpoints
	}
	return nil
}

type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{13}
}

func (x *GetBalanceRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetEmbBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance string `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetEmbBalanceResponse) Reset() {
	*x = GetEmbBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmbBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmbBalanceResponse) ProtoMessage() {}

func (x *GetEmbBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmbBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetEmbBalanceResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{14}
}

func (x *GetEmbBalanceResponse) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type GetByteFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fee string `protobuf:"bytes,1,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *GetByteFeeResponse) Reset() {
	*x = GetByteFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByteFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByteFeeResponse) ProtoMessage() {}

func (x *GetByteFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByteFeeResponse.ProtoReflect.Descriptor instead.
func (*GetByteFeeResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{15}
}

func (x *GetByteFeeResponse) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

type GetBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height         uint32 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Confirmed      string `protobuf:"bytes,2,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Unconfirmed    string `protobuf:"bytes,3,opt,name=unconfirmed,proto3" json:"unconfirmed,omitempty"`
	Collateralized string `protobuf:"bytes,4,opt,name=collateralized,proto3" json:"collateralized,omitempty"`
	Unlockable     string `protobuf:"bytes,5,opt,name=unlockable,proto3" json:"unlockable,omitempty"`
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{16}
}

func (x *GetBalanceResponse) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GetBalanceResponse) GetConfirmed() string {
	if x != nil {
		return x.Confirmed
	}
	return ""
}

func (x *GetBalanceResponse) GetUnconfirmed() string {
	if x != nil {
		return x.Unconfirmed
	}
	return ""
}

func (x *GetBalanceResponse) GetCollateralized() string {
	if x != nil {
		return x.Collateralized
	}
	return ""
}

func (x *GetBalanceResponse) GetUnlockable() string {
	if x != nil {
		return x.Unlockable
	}
	return ""
}

type GetUnlockTakerTxParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash        string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	TxOutputIndex uint32 `protobuf:"varint,2,opt,name=tx_output_index,json=txOutputIndex,proto3" json:"tx_output_index,omitempty"`
}

func (x *GetUnlockTakerTxParamsRequest) Reset() {
	*x = GetUnlockTakerTxParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnlockTakerTxParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnlockTakerTxParamsRequest) ProtoMessage() {}

func (x *GetUnlockTakerTxParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnlockTakerTxParamsRequest.ProtoReflect.Descriptor instead.
func (*GetUnlockTakerTxParamsRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{17}
}

func (x *GetUnlockTakerTxParamsRequest) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *GetUnlockTakerTxParamsRequest) GetTxOutputIndex() uint32 {
	if x != nil {
		return x.TxOutputIndex
	}
	return 0
}

type GetUnlockTakerTxParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnlockScripts []string `protobuf:"bytes,1,rep,name=unlock_scripts,json=unlockScripts,proto3" json:"unlock_scripts,omitempty"`
	ValueInTx     []byte   `protobuf:"bytes,2,opt,name=value_in_tx,json=valueInTx,proto3" json:"value_in_tx,omitempty"`
}

func (x *GetUnlockTakerTxParamsResponse) Reset() {
	*x = GetUnlockTakerTxParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnlockTakerTxParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnlockTakerTxParamsResponse) ProtoMessage() {}

func (x *GetUnlockTakerTxParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnlockTakerTxParamsResponse.ProtoReflect.Descriptor instead.
func (*GetUnlockTakerTxParamsResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{18}
}

func (x *GetUnlockTakerTxParamsResponse) GetUnlockScripts() []string {
	if x != nil {
		return x.UnlockScripts
	}
	return nil
}

func (x *GetUnlockTakerTxParamsResponse) GetValueInTx() []byte {
	if x != nil {
		return x.ValueInTx
	}
	return nil
}

type MakerOrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeHeight           uint64 `protobuf:"varint,1,opt,name=trade_height,json=tradeHeight,proto3" json:"trade_height,omitempty"`
	Deposit               uint64 `protobuf:"varint,2,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Settlement            uint64 `protobuf:"varint,3,opt,name=settlement,proto3" json:"settlement,omitempty"`
	ShiftMaker            uint64 `protobuf:"varint,4,opt,name=shift_maker,json=shiftMaker,proto3" json:"shift_maker,omitempty"`
	ShiftTaker            uint64 `protobuf:"varint,5,opt,name=shift_taker,json=shiftTaker,proto3" json:"shift_taker,omitempty"`
	SendsFromChain        string `protobuf:"bytes,6,opt,name=sends_from_chain,json=sendsFromChain,proto3" json:"sends_from_chain,omitempty"`
	ReceivesToChain       string `protobuf:"bytes,7,opt,name=receives_to_chain,json=receivesToChain,proto3" json:"receives_to_chain,omitempty"`
	SendsFromAddress      string `protobuf:"bytes,8,opt,name=sends_from_address,json=sendsFromAddress,proto3" json:"sends_from_address,omitempty"`
	ReceivesToAddress     string `protobuf:"bytes,9,opt,name=receives_to_address,json=receivesToAddress,proto3" json:"receives_to_address,omitempty"`
	SendsUnit             string `protobuf:"bytes,10,opt,name=sends_unit,json=sendsUnit,proto3" json:"sends_unit,omitempty"`
	ReceivesUnit          string `protobuf:"bytes,11,opt,name=receives_unit,json=receivesUnit,proto3" json:"receives_unit,omitempty"`
	DoubleHashedBcAddress string `protobuf:"bytes,12,opt,name=double_hashed_bc_address,json=doubleHashedBcAddress,proto3" json:"double_hashed_bc_address,omitempty"`
	CollateralizedNrg     string `protobuf:"bytes,13,opt,name=collateralized_nrg,json=collateralizedNrg,proto3" json:"collateralized_nrg,omitempty"`
	OriginalNrg           string `protobuf:"bytes,14,opt,name=original_nrg,json=originalNrg,proto3" json:"original_nrg,omitempty"`
	NrgUnit               string `protobuf:"bytes,15,opt,name=nrg_unit,json=nrgUnit,proto3" json:"nrg_unit,omitempty"`
	TxHash                string `protobuf:"bytes,16,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	TxOutputIndex         uint32 `protobuf:"varint,17,opt,name=tx_output_index,json=txOutputIndex,proto3" json:"tx_output_index,omitempty"`
	IsSettled             bool   `protobuf:"varint,18,opt,name=is_settled,json=isSettled,proto3" json:"is_settled,omitempty"`
	FixedUnitFee          string `protobuf:"bytes,19,opt,name=fixed_unit_fee,json=fixedUnitFee,proto3" json:"fixed_unit_fee,omitempty"`
	Base                  uint32 `protobuf:"varint,20,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *MakerOrderInfo) Reset() {
	*x = MakerOrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakerOrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakerOrderInfo) ProtoMessage() {}

func (x *MakerOrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakerOrderInfo.ProtoReflect.Descriptor instead.
func (*MakerOrderInfo) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{19}
}

func (x *MakerOrderInfo) GetTradeHeight() uint64 {
	if x != nil {
		return x.TradeHeight
	}
	return 0
}

func (x *MakerOrderInfo) GetDeposit() uint64 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *MakerOrderInfo) GetSettlement() uint64 {
	if x != nil {
		return x.Settlement
	}
	return 0
}

func (x *MakerOrderInfo) GetShiftMaker() uint64 {
	if x != nil {
		return x.ShiftMaker
	}
	return 0
}

func (x *MakerOrderInfo) GetShiftTaker() uint64 {
	if x != nil {
		return x.ShiftTaker
	}
	return 0
}

func (x *MakerOrderInfo) GetSendsFromChain() string {
	if x != nil {
		return x.SendsFromChain
	}
	return ""
}

func (x *MakerOrderInfo) GetReceivesToChain() string {
	if x != nil {
		return x.ReceivesToChain
	}
	return ""
}

func (x *MakerOrderInfo) GetSendsFromAddress() string {
	if x != nil {
		return x.SendsFromAddress
	}
	return ""
}

func (x *MakerOrderInfo) GetReceivesToAddress() string {
	if x != nil {
		return x.ReceivesToAddress
	}
	return ""
}

func (x *MakerOrderInfo) GetSendsUnit() string {
	if x != nil {
		return x.SendsUnit
	}
	return ""
}

func (x *MakerOrderInfo) GetReceivesUnit() string {
	if x != nil {
		return x.ReceivesUnit
	}
	return ""
}

func (x *MakerOrderInfo) GetDoubleHashedBcAddress() string {
	if x != nil {
		return x.DoubleHashedBcAddress
	}
	return ""
}

func (x *MakerOrderInfo) GetCollateralizedNrg() string {
	if x != nil {
		return x.CollateralizedNrg
	}
	return ""
}

func (x *MakerOrderInfo) GetOriginalNrg() string {
	if x != nil {
		return x.OriginalNrg
	}
	return ""
}

func (x *MakerOrderInfo) GetNrgUnit() string {
	if x != nil {
		return x.NrgUnit
	}
	return ""
}

func (x *MakerOrderInfo) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *MakerOrderInfo) GetTxOutputIndex() uint32 {
	if x != nil {
		return x.TxOutputIndex
	}
	return 0
}

func (x *MakerOrderInfo) GetIsSettled() bool {
	if x != nil {
		return x.IsSettled
	}
	return false
}

func (x *MakerOrderInfo) GetFixedUnitFee() string {
	if x != nil {
		return x.FixedUnitFee
	}
	return ""
}

func (x *MakerOrderInfo) GetBase() uint32 {
	if x != nil {
		return x.Base
	}
	return 0
}

type TakerOrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendsFromAddress      string `protobuf:"bytes,1,opt,name=sends_from_address,json=sendsFromAddress,proto3" json:"sends_from_address,omitempty"`
	ReceivesToAddress     string `protobuf:"bytes,2,opt,name=receives_to_address,json=receivesToAddress,proto3" json:"receives_to_address,omitempty"`
	DoubleHashedBcAddress string `protobuf:"bytes,3,opt,name=double_hashed_bc_address,json=doubleHashedBcAddress,proto3" json:"double_hashed_bc_address,omitempty"`
	IsSettled             bool   `protobuf:"varint,4,opt,name=is_settled,json=isSettled,proto3" json:"is_settled,omitempty"`
	TxHash                string `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	TxOutputIndex         uint32 `protobuf:"varint,6,opt,name=tx_output_index,json=txOutputIndex,proto3" json:"tx_output_index,omitempty"`
	TotalCollateral       string `protobuf:"bytes,7,opt,name=total_collateral,json=totalCollateral,proto3" json:"total_collateral,omitempty"`
	TradeHeight           uint64 `protobuf:"varint,8,opt,name=trade_height,json=tradeHeight,proto3" json:"trade_height,omitempty"`
	Timestamp             uint64 `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TakerOrderInfo) Reset() {
	*x = TakerOrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakerOrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakerOrderInfo) ProtoMessage() {}

func (x *TakerOrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakerOrderInfo.ProtoReflect.Descriptor instead.
func (*TakerOrderInfo) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{20}
}

func (x *TakerOrderInfo) GetSendsFromAddress() string {
	if x != nil {
		return x.SendsFromAddress
	}
	return ""
}

func (x *TakerOrderInfo) GetReceivesToAddress() string {
	if x != nil {
		return x.ReceivesToAddress
	}
	return ""
}

func (x *TakerOrderInfo) GetDoubleHashedBcAddress() string {
	if x != nil {
		return x.DoubleHashedBcAddress
	}
	return ""
}

func (x *TakerOrderInfo) GetIsSettled() bool {
	if x != nil {
		return x.IsSettled
	}
	return false
}

func (x *TakerOrderInfo) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *TakerOrderInfo) GetTxOutputIndex() uint32 {
	if x != nil {
		return x.TxOutputIndex
	}
	return 0
}

func (x *TakerOrderInfo) GetTotalCollateral() string {
	if x != nil {
		return x.TotalCollateral
	}
	return ""
}

func (x *TakerOrderInfo) GetTradeHeight() uint64 {
	if x != nil {
		return x.TradeHeight
	}
	return 0
}

func (x *TakerOrderInfo) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type MatchedOrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Maker    *MakerOrderInfo `protobuf:"bytes,1,opt,name=maker,proto3" json:"maker,omitempty"`
	Taker    *TakerOrderInfo `protobuf:"bytes,2,opt,name=taker,proto3" json:"taker,omitempty"`
	Unlocked bool            `protobuf:"varint,7,opt,name=unlocked,proto3" json:"unlocked,omitempty"`
}

func (x *MatchedOrderInfo) Reset() {
	*x = MatchedOrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchedOrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchedOrderInfo) ProtoMessage() {}

func (x *MatchedOrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchedOrderInfo.ProtoReflect.Descriptor instead.
func (*MatchedOrderInfo) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{21}
}

func (x *MatchedOrderInfo) GetMaker() *MakerOrderInfo {
	if x != nil {
		return x.Maker
	}
	return nil
}

func (x *MatchedOrderInfo) GetTaker() *TakerOrderInfo {
	if x != nil {
		return x.Taker
	}
	return nil
}

func (x *MatchedOrderInfo) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

type GetOpenOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*MakerOrderInfo `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *GetOpenOrdersResponse) Reset() {
	*x = GetOpenOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpenOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpenOrdersResponse) ProtoMessage() {}

func (x *GetOpenOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpenOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetOpenOrdersResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{22}
}

func (x *GetOpenOrdersResponse) GetOrders() []*MakerOrderInfo {
	if x != nil {
		return x.Orders
	}
	return nil
}

type GetMatchedOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*MatchedOrderInfo `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *GetMatchedOrdersResponse) Reset() {
	*x = GetMatchedOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchedOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchedOrdersResponse) ProtoMessage() {}

func (x *GetMatchedOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchedOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetMatchedOrdersResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{23}
}

func (x *GetMatchedOrdersResponse) GetOrders() []*MatchedOrderInfo {
	if x != nil {
		return x.Orders
	}
	return nil
}

type GetHistoricalOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders    []*MatchedOrderInfo `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	NextBlock uint64              `protobuf:"varint,2,opt,name=next_block,json=nextBlock,proto3" json:"next_block,omitempty"`
}

func (x *GetHistoricalOrdersResponse) Reset() {
	*x = GetHistoricalOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoricalOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoricalOrdersResponse) ProtoMessage() {}

func (x *GetHistoricalOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoricalOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetHistoricalOrdersResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{24}
}

func (x *GetHistoricalOrdersResponse) GetOrders() []*MatchedOrderInfo {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *GetHistoricalOrdersResponse) GetNextBlock() uint64 {
	if x != nil {
		return x.NextBlock
	}
	return 0
}

type TakerOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendsFromAddress   string `protobuf:"bytes,1,opt,name=sends_from_address,json=sendsFromAddress,proto3" json:"sends_from_address,omitempty"`
	ReceivesToAddress  string `protobuf:"bytes,2,opt,name=receives_to_address,json=receivesToAddress,proto3" json:"receives_to_address,omitempty"`
	MakerTxHash        string `protobuf:"bytes,3,opt,name=maker_tx_hash,json=makerTxHash,proto3" json:"maker_tx_hash,omitempty"`
	MakerTxOutputIndex uint32 `protobuf:"varint,4,opt,name=maker_tx_output_index,json=makerTxOutputIndex,proto3" json:"maker_tx_output_index,omitempty"`
	CollateralizedNrg  string `protobuf:"bytes,5,opt,name=collateralized_nrg,json=collateralizedNrg,proto3" json:"collateralized_nrg,omitempty"`
}

func (x *TakerOrder) Reset() {
	*x = TakerOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakerOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakerOrder) ProtoMessage() {}

func (x *TakerOrder) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakerOrder.ProtoReflect.Descriptor instead.
func (*TakerOrder) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{25}
}

func (x *TakerOrder) GetSendsFromAddress() string {
	if x != nil {
		return x.SendsFromAddress
	}
	return ""
}

func (x *TakerOrder) GetReceivesToAddress() string {
	if x != nil {
		return x.ReceivesToAddress
	}
	return ""
}

func (x *TakerOrder) GetMakerTxHash() string {
	if x != nil {
		return x.MakerTxHash
	}
	return ""
}

func (x *TakerOrder) GetMakerTxOutputIndex() uint32 {
	if x != nil {
		return x.MakerTxOutputIndex
	}
	return 0
}

func (x *TakerOrder) GetCollateralizedNrg() string {
	if x != nil {
		return x.CollateralizedNrg
	}
	return ""
}

type GetBlake2BlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToBeHashed string `protobuf:"bytes,1,opt,name=to_be_hashed,json=toBeHashed,proto3" json:"to_be_hashed,omitempty"`
	Times      uint32 `protobuf:"varint,2,opt,name=times,proto3" json:"times,omitempty"`
}

func (x *GetBlake2BlRequest) Reset() {
	*x = GetBlake2BlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlake2BlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlake2BlRequest) ProtoMessage() {}

func (x *GetBlake2BlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlake2BlRequest.ProtoReflect.Descriptor instead.
func (*GetBlake2BlRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{26}
}

func (x *GetBlake2BlRequest) GetToBeHashed() string {
	if x != nil {
		return x.ToBeHashed
	}
	return ""
}

func (x *GetBlake2BlRequest) GetTimes() uint32 {
	if x != nil {
		return x.Times
	}
	return 0
}

type GetBlake2BlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GetBlake2BlResponse) Reset() {
	*x = GetBlake2BlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlake2BlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlake2BlResponse) ProtoMessage() {}

func (x *GetBlake2BlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlake2BlResponse.ProtoReflect.Descriptor instead.
func (*GetBlake2BlResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{27}
}

func (x *GetBlake2BlResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type VanityConvertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vanity string `protobuf:"bytes,1,opt,name=vanity,proto3" json:"vanity,omitempty"`
}

func (x *VanityConvertRequest) Reset() {
	*x = VanityConvertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VanityConvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VanityConvertRequest) ProtoMessage() {}

func (x *VanityConvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VanityConvertRequest.ProtoReflect.Descriptor instead.
func (*VanityConvertRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{28}
}

func (x *VanityConvertRequest) GetVanity() string {
	if x != nil {
		return x.Vanity
	}
	return ""
}

type VanityConvertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BcAddress string `protobuf:"bytes,1,opt,name=bc_address,json=bcAddress,proto3" json:"bc_address,omitempty"`
	Error     string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *VanityConvertResponse) Reset() {
	*x = VanityConvertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VanityConvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VanityConvertResponse) ProtoMessage() {}

func (x *VanityConvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VanityConvertResponse.ProtoReflect.Descriptor instead.
func (*VanityConvertResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{29}
}

func (x *VanityConvertResponse) GetBcAddress() string {
	if x != nil {
		return x.BcAddress
	}
	return ""
}

func (x *VanityConvertResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetRoveredBlockHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockchain string `protobuf:"bytes,1,opt,name=blockchain,proto3" json:"blockchain,omitempty"`
	Hash       string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GetRoveredBlockHashRequest) Reset() {
	*x = GetRoveredBlockHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoveredBlockHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoveredBlockHashRequest) ProtoMessage() {}

func (x *GetRoveredBlockHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoveredBlockHashRequest.ProtoReflect.Descriptor instead.
func (*GetRoveredBlockHashRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{30}
}

func (x *GetRoveredBlockHashRequest) GetBlockchain() string {
	if x != nil {
		return x.Blockchain
	}
	return ""
}

func (x *GetRoveredBlockHashRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetRoveredBlockHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockchain string `protobuf:"bytes,1,opt,name=blockchain,proto3" json:"blockchain,omitempty"`
	Height     uint32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetRoveredBlockHeightRequest) Reset() {
	*x = GetRoveredBlockHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoveredBlockHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoveredBlockHeightRequest) ProtoMessage() {}

func (x *GetRoveredBlockHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoveredBlockHeightRequest.ProtoReflect.Descriptor instead.
func (*GetRoveredBlockHeightRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{31}
}

func (x *GetRoveredBlockHeightRequest) GetBlockchain() string {
	if x != nil {
		return x.Blockchain
	}
	return ""
}

func (x *GetRoveredBlockHeightRequest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetBlockHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GetBlockHashRequest) Reset() {
	*x = GetBlockHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHashRequest) ProtoMessage() {}

func (x *GetBlockHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHashRequest.ProtoReflect.Descriptor instead.
func (*GetBlockHashRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{32}
}

func (x *GetBlockHashRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetBlockHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint32 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetBlockHeightRequest) Reset() {
	*x = GetBlockHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHeightRequest) ProtoMessage() {}

func (x *GetBlockHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHeightRequest.ProtoReflect.Descriptor instead.
func (*GetBlockHeightRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{33}
}

func (x *GetBlockHeightRequest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartHeight uint32 `protobuf:"varint,1,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	EndHeight   uint32 `protobuf:"varint,2,opt,name=end_height,json=endHeight,proto3" json:"end_height,omitempty"`
}

func (x *GetBlocksRequest) Reset() {
	*x = GetBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksRequest) ProtoMessage() {}

func (x *GetBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksRequest.ProtoReflect.Descriptor instead.
func (*GetBlocksRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{34}
}

func (x *GetBlocksRequest) GetStartHeight() uint32 {
	if x != nil {
		return x.StartHeight
	}
	return 0
}

func (x *GetBlocksRequest) GetEndHeight() uint32 {
	if x != nil {
		return x.EndHeight
	}
	return 0
}

type GetBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*BcBlock `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *GetBlocksResponse) Reset() {
	*x = GetBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksResponse) ProtoMessage() {}

func (x *GetBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksResponse.ProtoReflect.Descriptor instead.
func (*GetBlocksResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{35}
}

func (x *GetBlocksResponse) GetBlocks() []*BcBlock {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type GetRoveredBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockchain  string `protobuf:"bytes,1,opt,name=blockchain,proto3" json:"blockchain,omitempty"`
	StartHeight uint32 `protobuf:"varint,2,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	EndHeight   uint32 `protobuf:"varint,3,opt,name=end_height,json=endHeight,proto3" json:"end_height,omitempty"`
}

func (x *GetRoveredBlocksRequest) Reset() {
	*x = GetRoveredBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoveredBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoveredBlocksRequest) ProtoMessage() {}

func (x *GetRoveredBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoveredBlocksRequest.ProtoReflect.Descriptor instead.
func (*GetRoveredBlocksRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{36}
}

func (x *GetRoveredBlocksRequest) GetBlockchain() string {
	if x != nil {
		return x.Blockchain
	}
	return ""
}

func (x *GetRoveredBlocksRequest) GetStartHeight() uint32 {
	if x != nil {
		return x.StartHeight
	}
	return 0
}

func (x *GetRoveredBlocksRequest) GetEndHeight() uint32 {
	if x != nil {
		return x.EndHeight
	}
	return 0
}

type GetRawMempoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *GetRawMempoolResponse) Reset() {
	*x = GetRawMempoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRawMempoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawMempoolResponse) ProtoMessage() {}

func (x *GetRawMempoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawMempoolResponse.ProtoReflect.Descriptor instead.
func (*GetRawMempoolResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{37}
}

func (x *GetRawMempoolResponse) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type GetRoveredBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *GetRoveredBlocksResponse) Reset() {
	*x = GetRoveredBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoveredBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoveredBlocksResponse) ProtoMessage() {}

func (x *GetRoveredBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoveredBlocksResponse.ProtoReflect.Descriptor instead.
func (*GetRoveredBlocksResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{38}
}

func (x *GetRoveredBlocksResponse) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type GetTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GetTxRequest) Reset() {
	*x = GetTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxRequest) ProtoMessage() {}

func (x *GetTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxRequest.ProtoReflect.Descriptor instead.
func (*GetTxRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{39}
}

func (x *GetTxRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetMarkedTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockchain string `protobuf:"bytes,1,opt,name=blockchain,proto3" json:"blockchain,omitempty"`
	Hash       string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GetMarkedTxRequest) Reset() {
	*x = GetMarkedTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarkedTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarkedTxRequest) ProtoMessage() {}

func (x *GetMarkedTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarkedTxRequest.ProtoReflect.Descriptor instead.
func (*GetMarkedTxRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{40}
}

func (x *GetMarkedTxRequest) GetBlockchain() string {
	if x != nil {
		return x.Blockchain
	}
	return ""
}

func (x *GetMarkedTxRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetOutPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash  string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Index uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *GetOutPointRequest) Reset() {
	*x = GetOutPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOutPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOutPointRequest) ProtoMessage() {}

func (x *GetOutPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOutPointRequest.ProtoReflect.Descriptor instead.
func (*GetOutPointRequest) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{41}
}

func (x *GetOutPointRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetOutPointRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type GetTradeStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status uint32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetTradeStatusResponse) Reset() {
	*x = GetTradeStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTradeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradeStatusResponse) ProtoMessage() {}

func (x *GetTradeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradeStatusResponse.ProtoReflect.Descriptor instead.
func (*GetTradeStatusResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{42}
}

func (x *GetTradeStatusResponse) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetOutPointStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unspent bool `protobuf:"varint,1,opt,name=unspent,proto3" json:"unspent,omitempty"`
}

func (x *GetOutPointStatusResponse) Reset() {
	*x = GetOutPointStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOutPointStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOutPointStatusResponse) ProtoMessage() {}

func (x *GetOutPointStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOutPointStatusResponse.ProtoReflect.Descriptor instead.
func (*GetOutPointStatusResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{43}
}

func (x *GetOutPointStatusResponse) GetUnspent() bool {
	if x != nil {
		return x.Unspent
	}
	return false
}

type CurrentWork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Work string `protobuf:"bytes,1,opt,name=work,proto3" json:"work,omitempty"`
}

func (x *CurrentWork) Reset() {
	*x = CurrentWork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentWork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentWork) ProtoMessage() {}

func (x *CurrentWork) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentWork.ProtoReflect.Descriptor instead.
func (*CurrentWork) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{44}
}

func (x *CurrentWork) GetWork() string {
	if x != nil {
		return x.Work
	}
	return ""
}

type SyncStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SyncStatus) Reset() {
	*x = SyncStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStatus) ProtoMessage() {}

func (x *SyncStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStatus.ProtoReflect.Descriptor instead.
func (*SyncStatus) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{45}
}

func (x *SyncStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NgrokTunnel  string `protobuf:"bytes,1,opt,name=ngrok_tunnel,json=ngrokTunnel,proto3" json:"ngrok_tunnel,omitempty"`
	BuildVersion string `protobuf:"bytes,2,opt,name=build_version,json=buildVersion,proto3" json:"build_version,omitempty"`
}

func (x *SettingsResponse) Reset() {
	*x = SettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsResponse) ProtoMessage() {}

func (x *SettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsResponse.ProtoReflect.Descriptor instead.
func (*SettingsResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{46}
}

func (x *SettingsResponse) GetNgrokTunnel() string {
	if x != nil {
		return x.NgrokTunnel
	}
	return ""
}

func (x *SettingsResponse) GetBuildVersion() string {
	if x != nil {
		return x.BuildVersion
	}
	return ""
}

type GetNrgSupplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetNrgSupplyResponse) Reset() {
	*x = GetNrgSupplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNrgSupplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNrgSupplyResponse) ProtoMessage() {}

func (x *GetNrgSupplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNrgSupplyResponse.ProtoReflect.Descriptor instead.
func (*GetNrgSupplyResponse) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{47}
}

func (x *GetNrgSupplyResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GetMarkedTxs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs []*MarkedTransaction `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *GetMarkedTxs) Reset() {
	*x = GetMarkedTxs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarkedTxs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarkedTxs) ProtoMessage() {}

func (x *GetMarkedTxs) ProtoReflect() protoreflect.Message {
	mi := &file_bc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarkedTxs.ProtoReflect.Descriptor instead.
func (*GetMarkedTxs) Descriptor() ([]byte, []int) {
	return file_bc_proto_rawDescGZIP(), []int{48}
}

func (x *GetMarkedTxs) GetTxs() []*MarkedTransaction {
	if x != nil {
		return x.Txs
	}
	return nil
}

var File_bc_proto protoreflect.FileDescriptor

var file_bc_proto_rawDesc = []byte{
	0x0a, 0x08, 0x62, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x6c, 0x70, 0x54,
	0x65, 0x78, 0x74, 0x22, 0x5c, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x47, 0x70, 0x75, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x22, 0x9d, 0x01, 0x0a, 0x0e, 0x52, 0x70, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x78, 0x46, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x48, 0x65,
	0x78, 0x22, 0xa7, 0x01, 0x0a, 0x12, 0x52, 0x70, 0x63, 0x46, 0x65, 0x65, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x64, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x74, 0x78, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x78,
	0x46, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x68, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x48, 0x65, 0x78, 0x22, 0x7e, 0x0a, 0x16, 0x52,
	0x70, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x52, 0x70, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xbd, 0x01, 0x0a, 0x08,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a,
	0x0f, 0x74, 0x78, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x51, 0x0a, 0x0f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x39,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x22, 0x5f, 0x0a, 0x10, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x55, 0x74, 0x78, 0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2f, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x5d,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x49, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x6f,
	0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x2d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x31, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x6d,
	0x62, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x26, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x74, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66,
	0x65, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x60, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x54, 0x78, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x78, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x78,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x67, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x54, 0x78, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x6e,
	0x5f, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x49, 0x6e, 0x54, 0x78, 0x22, 0xe7, 0x05, 0x0a, 0x0e, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 0x6d, 0x61,
	0x6b, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x66, 0x74,
	0x4d, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x66,
	0x74, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x73, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x12,
	0x73, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x46,
	0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x73, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x6e, 0x64, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x6e, 0x64, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x37,
	0x0a, 0x18, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x5f,
	0x62, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x65, 0x64, 0x42, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6e, 0x72, 0x67, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x4e, 0x72, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x6e, 0x72, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4e, 0x72, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x72, 0x67,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x72, 0x67,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a,
	0x0f, 0x74, 0x78, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0xf3,
	0x02, 0x0a, 0x0e, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73,
	0x65, 0x6e, 0x64, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2e, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x73, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x37, 0x0a, 0x18, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x62, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x65, 0x64, 0x42,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x78, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x78, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x7c, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x05, 0x6d, 0x61, 0x6b, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x05, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x22, 0x40, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4d, 0x61,
	0x6b, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x22, 0x45, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x67, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0xf0, 0x01, 0x0a, 0x0a, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x74, 0x6f,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x73, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x74, 0x78, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x54,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x74,
	0x78, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x54, 0x78, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6e, 0x72, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x4e, 0x72, 0x67, 0x22, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x61, 0x6b, 0x65, 0x32, 0x62, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0c, 0x74, 0x6f, 0x5f, 0x62, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x42, 0x65, 0x48, 0x61, 0x73, 0x68, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x6b,
	0x65, 0x32, 0x62, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x22, 0x2e, 0x0a, 0x14, 0x56, 0x61, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6e, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6e, 0x69, 0x74, 0x79,
	0x22, 0x4c, 0x0a, 0x15, 0x56, 0x61, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x63, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x50,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x22, 0x56, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x22, 0x2f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0x54, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x6e, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x35, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x20, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x42, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x22, 0x7b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x49,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x22, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x48, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x35, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x22, 0x21, 0x0a, 0x0b,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x22,
	0x24, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5a, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x67, 0x72,
	0x6f, 0x6b, 0x5f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6e, 0x67, 0x72, 0x6f, 0x6b, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x72, 0x67, 0x53, 0x75, 0x70, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x34, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54, 0x78,
	0x73, 0x12, 0x24, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x03, 0x74, 0x78, 0x73, 0x2a, 0x38, 0x0a, 0x1c, 0x52, 0x70, 0x63, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x10,
	0x01, 0x32, 0x88, 0x14, 0x0a, 0x02, 0x42, 0x63, 0x12, 0x3c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x1b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x76,
	0x65, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1d, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x18, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x52, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x05, 0x2e,
	0x4e, 0x75, 0x6c, 0x6c, 0x1a, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x2e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e, 0x72, 0x67, 0x53, 0x75, 0x70, 0x70, 0x6c,
	0x79, 0x12, 0x05, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x1a, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x72,
	0x67, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x30, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x42, 0x63, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e,
	0x42, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x23, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x05, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x1a, 0x08, 0x2e, 0x42, 0x63, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x05, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x1a, 0x08, 0x2e, 0x42, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x26,
	0x0a, 0x05, 0x47, 0x65, 0x74, 0x54, 0x78, 0x12, 0x0d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x64, 0x54, 0x78, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x64, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54, 0x78, 0x73,
	0x46, 0x6f, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x13, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64,
	0x54, 0x78, 0x73, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x35, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77,
	0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x05, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x1a, 0x16,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x54, 0x78, 0x12, 0x0d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x42, 0x63, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54,
	0x78, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x00,
	0x12, 0x1e, 0x0a, 0x04, 0x48, 0x65, 0x6c, 0x70, 0x12, 0x05, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x1a,
	0x0d, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x20, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x05, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x1a, 0x0e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x29, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x05, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x1a, 0x11, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a,
	0x05, 0x4e, 0x65, 0x77, 0x54, 0x78, 0x12, 0x0f, 0x2e, 0x52, 0x70, 0x63, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x17, 0x2e, 0x52, 0x70, 0x63, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x31, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x12, 0x0c, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x17, 0x2e, 0x52, 0x70, 0x63,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x62, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x6d, 0x62, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6e,
	0x64, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6e,
	0x64, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12,
	0x1e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x61, 0x6b, 0x65, 0x72, 0x54, 0x78, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x54, 0x78, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x54, 0x78, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x79, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x05, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x1a, 0x13,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x74, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x10, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x12, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x63, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x54,
	0x58, 0x4f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x74,
	0x78, 0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x53, 0x54, 0x58, 0x4f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x15, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x74, 0x78, 0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x61, 0x6b, 0x65, 0x32, 0x62, 0x6c, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x61, 0x6b, 0x65, 0x32, 0x62, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x6b, 0x65, 0x32, 0x62, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x69, 0x61, 0x56, 0x61, 0x6e, 0x69, 0x74, 0x79,
	0x12, 0x15, 0x2e, 0x56, 0x61, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x56, 0x61, 0x6e, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x27, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x12, 0x05, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x1a, 0x0c, 0x2e, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x05, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x1a, 0x0b, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x00, 0x12, 0x29, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x61, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x05, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x1a, 0x0b, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x76, 0x65, 0x72, 0x6c,
	0x69, 0x6e, 0x65, 0x2d, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x6f, 0x6f, 0x6c, 0x2f,
	0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_bc_proto_rawDescOnce sync.Once
	file_bc_proto_rawDescData = file_bc_proto_rawDesc
)

func file_bc_proto_rawDescGZIP() []byte {
	file_bc_proto_rawDescOnce.Do(func() {
		file_bc_proto_rawDescData = protoimpl.X.CompressGZIP(file_bc_proto_rawDescData)
	})
	return file_bc_proto_rawDescData
}

var file_bc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bc_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_bc_proto_goTypes = []interface{}{
	(RpcTransactionResponseStatus)(0),      // 0: RpcTransactionResponseStatus
	(*HelpResponse)(nil),                   // 1: HelpResponse
	(*StatsResponse)(nil),                  // 2: StatsResponse
	(*RpcTransaction)(nil),                 // 3: RpcTransaction
	(*RpcFeedTransaction)(nil),             // 4: RpcFeedTransaction
	(*RpcTransactionResponse)(nil),         // 5: RpcTransactionResponse
	(*Transfer)(nil),                       // 6: Transfer
	(*TransferRequest)(nil),                // 7: TransferRequest
	(*GetHistoryRequest)(nil),              // 8: GetHistoryRequest
	(*TransferResponse)(nil),               // 9: TransferResponse
	(*GetUtxoLengthRequest)(nil),           // 10: GetUtxoLengthRequest
	(*GetUtxoLengthResponse)(nil),          // 11: GetUtxoLengthResponse
	(*GetSpendableCollateralRequest)(nil),  // 12: GetSpendableCollateralRequest
	(*GetSpendableCollateralResponse)(nil), // 13: GetSpendableCollateralResponse
	(*GetBalanceRequest)(nil),              // 14: GetBalanceRequest
	(*GetEmbBalanceResponse)(nil),          // 15: GetEmbBalanceResponse
	(*GetByteFeeResponse)(nil),             // 16: GetByteFeeResponse
	(*GetBalanceResponse)(nil),             // 17: GetBalanceResponse
	(*GetUnlockTakerTxParamsRequest)(nil),  // 18: GetUnlockTakerTxParamsRequest
	(*GetUnlockTakerTxParamsResponse)(nil), // 19: GetUnlockTakerTxParamsResponse
	(*MakerOrderInfo)(nil),                 // 20: MakerOrderInfo
	(*TakerOrderInfo)(nil),                 // 21: TakerOrderInfo
	(*MatchedOrderInfo)(nil),               // 22: MatchedOrderInfo
	(*GetOpenOrdersResponse)(nil),          // 23: GetOpenOrdersResponse
	(*GetMatchedOrdersResponse)(nil),       // 24: GetMatchedOrdersResponse
	(*GetHistoricalOrdersResponse)(nil),    // 25: GetHistoricalOrdersResponse
	(*TakerOrder)(nil),                     // 26: TakerOrder
	(*GetBlake2BlRequest)(nil),             // 27: GetBlake2blRequest
	(*GetBlake2BlResponse)(nil),            // 28: GetBlake2blResponse
	(*VanityConvertRequest)(nil),           // 29: VanityConvertRequest
	(*VanityConvertResponse)(nil),          // 30: VanityConvertResponse
	(*GetRoveredBlockHashRequest)(nil),     // 31: GetRoveredBlockHashRequest
	(*GetRoveredBlockHeightRequest)(nil),   // 32: GetRoveredBlockHeightRequest
	(*GetBlockHashRequest)(nil),            // 33: GetBlockHashRequest
	(*GetBlockHeightRequest)(nil),          // 34: GetBlockHeightRequest
	(*GetBlocksRequest)(nil),               // 35: GetBlocksRequest
	(*GetBlocksResponse)(nil),              // 36: GetBlocksResponse
	(*GetRoveredBlocksRequest)(nil),        // 37: GetRoveredBlocksRequest
	(*GetRawMempoolResponse)(nil),          // 38: GetRawMempoolResponse
	(*GetRoveredBlocksResponse)(nil),       // 39: GetRoveredBlocksResponse
	(*GetTxRequest)(nil),                   // 40: GetTxRequest
	(*GetMarkedTxRequest)(nil),             // 41: GetMarkedTxRequest
	(*GetOutPointRequest)(nil),             // 42: GetOutPointRequest
	(*GetTradeStatusResponse)(nil),         // 43: GetTradeStatusResponse
	(*GetOutPointStatusResponse)(nil),      // 44: GetOutPointStatusResponse
	(*CurrentWork)(nil),                    // 45: CurrentWork
	(*SyncStatus)(nil),                     // 46: SyncStatus
	(*SettingsResponse)(nil),               // 47: SettingsResponse
	(*GetNrgSupplyResponse)(nil),           // 48: GetNrgSupplyResponse
	(*GetMarkedTxs)(nil),                   // 49: GetMarkedTxs
	(*OutPoint)(nil),                       // 50: OutPoint
	(*BcBlock)(nil),                        // 51: BcBlock
	(*Transaction)(nil),                    // 52: Transaction
	(*Block)(nil),                          // 53: Block
	(*MarkedTransaction)(nil),              // 54: MarkedTransaction
	(*Null)(nil),                           // 55: Null
	(*WalletData)(nil),                     // 56: WalletData
}
var file_bc_proto_depIdxs = []int32{
	0,  // 0: RpcTransactionResponse.status:type_name -> RpcTransactionResponseStatus
	6,  // 1: TransferResponse.transfers:type_name -> Transfer
	50, // 2: GetSpendableCollateralResponse.outpoints:type_name -> OutPoint
	20, // 3: MatchedOrderInfo.maker:type_name -> MakerOrderInfo
	21, // 4: MatchedOrderInfo.taker:type_name -> TakerOrderInfo
	20, // 5: GetOpenOrdersResponse.orders:type_name -> MakerOrderInfo
	22, // 6: GetMatchedOrdersResponse.orders:type_name -> MatchedOrderInfo
	22, // 7: GetHistoricalOrdersResponse.orders:type_name -> MatchedOrderInfo
	51, // 8: GetBlocksResponse.blocks:type_name -> BcBlock
	52, // 9: GetRawMempoolResponse.transactions:type_name -> Transaction
	53, // 10: GetRoveredBlocksResponse.blocks:type_name -> Block
	54, // 11: GetMarkedTxs.txs:type_name -> MarkedTransaction
	31, // 12: Bc.GetRoveredBlockHash:input_type -> GetRoveredBlockHashRequest
	32, // 13: Bc.GetRoveredBlockHeight:input_type -> GetRoveredBlockHeightRequest
	37, // 14: Bc.GetRoveredBlocks:input_type -> GetRoveredBlocksRequest
	55, // 15: Bc.GetLatestRoveredBlocks:input_type -> Null
	55, // 16: Bc.GetNrgSupply:input_type -> Null
	33, // 17: Bc.GetBlockHash:input_type -> GetBlockHashRequest
	34, // 18: Bc.GetBlockHeight:input_type -> GetBlockHeightRequest
	34, // 19: Bc.GetBlocksHeight:input_type -> GetBlockHeightRequest
	35, // 20: Bc.GetBlocks:input_type -> GetBlocksRequest
	55, // 21: Bc.GetLatestBlock:input_type -> Null
	55, // 22: Bc.GetLatestUTXOBlock:input_type -> Null
	40, // 23: Bc.GetTx:input_type -> GetTxRequest
	41, // 24: Bc.GetMarkedTx:input_type -> GetMarkedTxRequest
	42, // 25: Bc.GetMarkedTxsForMatchedOrder:input_type -> GetOutPointRequest
	42, // 26: Bc.GetTradeStatus:input_type -> GetOutPointRequest
	42, // 27: Bc.GetOutpointStatus:input_type -> GetOutPointRequest
	42, // 28: Bc.GetTxClaimedBy:input_type -> GetOutPointRequest
	55, // 29: Bc.GetRawMempool:input_type -> Null
	40, // 30: Bc.GetBlockByTx:input_type -> GetTxRequest
	41, // 31: Bc.GetRoveredBlockForMarkedTx:input_type -> GetMarkedTxRequest
	55, // 32: Bc.Help:input_type -> Null
	55, // 33: Bc.Stats:input_type -> Null
	55, // 34: Bc.GetSettings:input_type -> Null
	3,  // 35: Bc.NewTx:input_type -> RpcTransaction
	52, // 36: Bc.SendTx:input_type -> Transaction
	14, // 37: Bc.GetEmbBalance:input_type -> GetBalanceRequest
	14, // 38: Bc.GetBalance:input_type -> GetBalanceRequest
	14, // 39: Bc.GetWallet:input_type -> GetBalanceRequest
	12, // 40: Bc.GetSpendableOutpoints:input_type -> GetSpendableCollateralRequest
	12, // 41: Bc.GetSpendableCollateral:input_type -> GetSpendableCollateralRequest
	18, // 42: Bc.GetUnlockTakerTxParams:input_type -> GetUnlockTakerTxParamsRequest
	55, // 43: Bc.GetByteFeeMultiplier:input_type -> Null
	7,  // 44: Bc.GetTransfers:input_type -> TransferRequest
	12, // 45: Bc.GetOpenOrders:input_type -> GetSpendableCollateralRequest
	12, // 46: Bc.GetMatchedOrders:input_type -> GetSpendableCollateralRequest
	8,  // 47: Bc.GetHistoricalOrders:input_type -> GetHistoryRequest
	14, // 48: Bc.GetUnmatchedOrders:input_type -> GetBalanceRequest
	10, // 49: Bc.GetUTXOLength:input_type -> GetUtxoLengthRequest
	10, // 50: Bc.GetSTXOLength:input_type -> GetUtxoLengthRequest
	27, // 51: Bc.GetBlake2bl:input_type -> GetBlake2blRequest
	29, // 52: Bc.GetBcAddressViaVanity:input_type -> VanityConvertRequest
	55, // 53: Bc.GetCurrentWork:input_type -> Null
	55, // 54: Bc.GetSyncStatus:input_type -> Null
	55, // 55: Bc.GetFastSyncStatus:input_type -> Null
	53, // 56: Bc.GetRoveredBlockHash:output_type -> Block
	53, // 57: Bc.GetRoveredBlockHeight:output_type -> Block
	39, // 58: Bc.GetRoveredBlocks:output_type -> GetRoveredBlocksResponse
	39, // 59: Bc.GetLatestRoveredBlocks:output_type -> GetRoveredBlocksResponse
	48, // 60: Bc.GetNrgSupply:output_type -> GetNrgSupplyResponse
	51, // 61: Bc.GetBlockHash:output_type -> BcBlock
	51, // 62: Bc.GetBlockHeight:output_type -> BcBlock
	36, // 63: Bc.GetBlocksHeight:output_type -> GetBlocksResponse
	36, // 64: Bc.GetBlocks:output_type -> GetBlocksResponse
	51, // 65: Bc.GetLatestBlock:output_type -> BcBlock
	51, // 66: Bc.GetLatestUTXOBlock:output_type -> BcBlock
	52, // 67: Bc.GetTx:output_type -> Transaction
	54, // 68: Bc.GetMarkedTx:output_type -> MarkedTransaction
	49, // 69: Bc.GetMarkedTxsForMatchedOrder:output_type -> GetMarkedTxs
	43, // 70: Bc.GetTradeStatus:output_type -> GetTradeStatusResponse
	44, // 71: Bc.GetOutpointStatus:output_type -> GetOutPointStatusResponse
	52, // 72: Bc.GetTxClaimedBy:output_type -> Transaction
	38, // 73: Bc.GetRawMempool:output_type -> GetRawMempoolResponse
	51, // 74: Bc.GetBlockByTx:output_type -> BcBlock
	53, // 75: Bc.GetRoveredBlockForMarkedTx:output_type -> Block
	1,  // 76: Bc.Help:output_type -> HelpResponse
	2,  // 77: Bc.Stats:output_type -> StatsResponse
	47, // 78: Bc.GetSettings:output_type -> SettingsResponse
	5,  // 79: Bc.NewTx:output_type -> RpcTransactionResponse
	5,  // 80: Bc.SendTx:output_type -> RpcTransactionResponse
	15, // 81: Bc.GetEmbBalance:output_type -> GetEmbBalanceResponse
	17, // 82: Bc.GetBalance:output_type -> GetBalanceResponse
	56, // 83: Bc.GetWallet:output_type -> WalletData
	56, // 84: Bc.GetSpendableOutpoints:output_type -> WalletData
	13, // 85: Bc.GetSpendableCollateral:output_type -> GetSpendableCollateralResponse
	19, // 86: Bc.GetUnlockTakerTxParams:output_type -> GetUnlockTakerTxParamsResponse
	16, // 87: Bc.GetByteFeeMultiplier:output_type -> GetByteFeeResponse
	9,  // 88: Bc.GetTransfers:output_type -> TransferResponse
	23, // 89: Bc.GetOpenOrders:output_type -> GetOpenOrdersResponse
	24, // 90: Bc.GetMatchedOrders:output_type -> GetMatchedOrdersResponse
	25, // 91: Bc.GetHistoricalOrders:output_type -> GetHistoricalOrdersResponse
	23, // 92: Bc.GetUnmatchedOrders:output_type -> GetOpenOrdersResponse
	11, // 93: Bc.GetUTXOLength:output_type -> GetUtxoLengthResponse
	11, // 94: Bc.GetSTXOLength:output_type -> GetUtxoLengthResponse
	28, // 95: Bc.GetBlake2bl:output_type -> GetBlake2blResponse
	30, // 96: Bc.GetBcAddressViaVanity:output_type -> VanityConvertResponse
	45, // 97: Bc.GetCurrentWork:output_type -> CurrentWork
	46, // 98: Bc.GetSyncStatus:output_type -> SyncStatus
	46, // 99: Bc.GetFastSyncStatus:output_type -> SyncStatus
	56, // [56:100] is the sub-list for method output_type
	12, // [12:56] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_bc_proto_init() }
func file_bc_proto_init() {
	if File_bc_proto != nil {
		return
	}
	file_core_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcFeedTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUtxoLengthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUtxoLengthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpendableCollateralRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpendableCollateralResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmbBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByteFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnlockTakerTxParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnlockTakerTxParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakerOrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakerOrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchedOrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOpenOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchedOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoricalOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakerOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlake2BlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlake2BlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VanityConvertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VanityConvertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoveredBlockHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoveredBlockHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoveredBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRawMempoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoveredBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarkedTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOutPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTradeStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOutPointStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentWork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNrgSupplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarkedTxs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bc_proto_goTypes,
		DependencyIndexes: file_bc_proto_depIdxs,
		EnumInfos:         file_bc_proto_enumTypes,
		MessageInfos:      file_bc_proto_msgTypes,
	}.Build()
	File_bc_proto = out.File
	file_bc_proto_rawDesc = nil
	file_bc_proto_goTypes = nil
	file_bc_proto_depIdxs = nil
}
