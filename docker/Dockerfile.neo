FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:3.1 AS Build

ARG TARGETPLATFORM
  
COPY neo-cli /neo-cli
COPY NuGet.Config /neo-cli

WORKDIR /neo-cli
RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
        RID=linux-x64 ; \
    elif [ "$TARGETPLATFORM" = "linux/arm64" ]; then \
        RID=linux-arm64 ; \
    elif [ "$TARGETPLATFORM" = "linux/arm/v7" ]; then \
        RID=linux-arm ; \
    fi \
     && dotnet restore && dotnet publish -c Release -r $RID -o /app

FROM mcr.microsoft.com/dotnet/aspnet:3.1 AS Final

ARG NEO_VERSION

RUN apt-get update \
     && apt-get install -y \
        screen \
        libleveldb-dev \
        sqlite3 \
        unzip \
     && rm -rf /var/lib/apt/lists/*

RUN groupadd -r -g 1103 neo \
     && useradd --no-log-init -r -u 1103 -g neo neo \
     && mkdir -p /neo-cli \
     && chown -R neo /neo-cli \
     && chgrp -R neo /neo-cli

WORKDIR /neo-cli
COPY --from=Build --chown=neo:neo /app .

EXPOSE 10332
EXPOSE 10333

USER neo:neo

COPY --chown=neo:neo neo-config.json ./config.json
COPY --chown=neo:neo install-neo-plugins.sh ./install-neo-plugins.sh
RUN ./install-neo-plugins.sh ${NEO_VERSION}
  
ENTRYPOINT ["screen", "-DmS", "node", "dotnet","neo-cli.dll", "-r"]